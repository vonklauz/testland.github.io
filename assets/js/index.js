document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".hamburger__section"),t=Array.from(document.querySelectorAll(".section")),s=document.querySelector(".primary"),i=document.querySelector(".news");e.addEventListener("click",(function(t){e.classList.add("hamburger__section__opened"),e.addEventListener("animationend",()=>{e.classList.add("hamburger__section__finally_opened")})}));const n=(e,t=250)=>e.querySelectorAll(".swiper-slide").forEach((e,s)=>{setTimeout(()=>{e.style.opacity=s<2?"1":2===s?".5":".25"},t),t+=200});if(s){t.forEach(e=>{e.addEventListener("click",(function(t){"about"===e.dataset.name||"hobby"===e.dataset.name||"projects"===e.dataset.name?(document.querySelector(".primary").style.paddingLeft="0",document.querySelector(".text-bottom").style.paddingLeft="33px",e.classList.add("chosen-full")):e.classList.add("chosen");const s=e.previousElementSibling;e.addEventListener("animationend",(function(t){switch(e.dataset.name){case"about":e.querySelector(".slide-1").classList.add("slide-1__scrolled"),e.querySelector(".slide-3").classList.add("slide-3__scrolled");case"hobby":e.querySelector(".slide-1").classList.add("slide-1__scrolled"),e.querySelector(".section-name").classList.add("section-name__scrolled"),e.querySelector(".slide-2").classList.add("slide-2__scrolled"),e.addEventListener("animationend",(function(){n(document.querySelector(".hobby-slider"))}));case"projects":e.querySelector(".slide-2").classList.add("slide-2__scrolled"),e.style.width="100vw",e.querySelector(".section-name").classList.add("section-name__scrolled"),e.addEventListener("animationend",(function(){n(document.querySelector(".projects-slider"))}));case"media":e.querySelector(".slide-1").classList.add("slide-1__scrolled"),e.querySelector(".slide-2").classList.add("slide-2__scrolled"),e.querySelector(".slide-2").addEventListener("animationend",(function(){let t=250;e.querySelectorAll(".podcast-col").forEach(e=>{setTimeout(()=>e.style.opacity="1",t),t+=200})}))}})),s&&(s.classList.add("hidden-"+s.dataset.order),s.style.marginLeft=`calc(-1 * (100vw - 33px) / 4 * ${s.dataset.order})`)}))});new Swiper(".projects-slider",{direction:"vertical",loop:!1,slidesPerView:4,spaceBetween:15,scrollbar:{verticalClass:"d-none"},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev",lockClass:"d-none"},on:{activeIndexChange:function(){const{activeIndex:e}=this;this.slides.forEach((t,s)=>{t.style.opacity=s<=e||s===e+1?"1":s===e+2?".5":s>e+2&&s<e+4?".25":"0"})},reachEnd:function(){this.slides.forEach(e=>e.style.opacity="1")}}}),new Swiper(".hobby-slider",{direction:"vertical",loop:!1,slidesPerView:2,spaceBetween:15,scrollbar:{verticalClass:"d-none"},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev",lockClass:"d-none"},on:{activeIndexChange:function(){const{activeIndex:e}=this;this.slides.forEach((t,s)=>{t.style.opacity=s<=e||s===e+1?"1":s===e+2?".5":s>e+2&&s<e+4?".25":"0"})}}})}if(i){let e=200;i.querySelectorAll(".news-item").forEach(t=>{setTimeout(()=>t.style.opacity=1,e),e+=200})}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
