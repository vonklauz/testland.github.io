document.addEventListener("DOMContentLoaded",(function(){const e={$el:e=>document.querySelector(e),setState:()=>{sessionStorage.setItem("state",JSON.stringify(e.$el(".index-main").innerHTML))},clearState:()=>{sessionStorage.removeItem("state")},initStateLinks:()=>{setTimeout(()=>{document.querySelectorAll(".state-link").forEach(t=>t.addEventListener("click",()=>{e.setState()}))},1e3)},isState:()=>!!sessionStorage.getItem("state"),isDesktop:()=>window.innerWidth>=996,expandPrimarySection:t=>{const i=e.$el(".section-slider"),s=i.querySelector('[data-name="about"]'),l=i.querySelector('[data-name="hobby"]'),n=i.querySelector('[data-name="projects"]'),a=i.querySelector('[data-name="media"]'),o=t.querySelector(`[data-position-${t.dataset.name}="outer"]`),r=t.querySelectorAll(`[data-position-${t.dataset.name}="inner"]`);switch(e.initStateLinks(),t.style.width="100%",t.dataset.name){case"about":l.style.left="100%",n.style.right="-50%",a.style.right="-70%",t.addEventListener("transitionend",(function(){t.querySelector(".slide-1").classList.add("slide-1__scrolled"),t.querySelector(".slide-3").classList.add("slide-3__scrolled")}));break;case"hobby":s.style.left="-25%",t.style.left=0,n.style.right="-25%",a.style.right="-50%",r.forEach(e=>e.style.display="none"),t.addEventListener("transitionend",(function(){t.querySelector(".slide-1").classList.add("slide-1__scrolled"),t.querySelector(".section-name").classList.add("section-name__scrolled"),t.querySelector(".slide-2").classList.add("slide-2__scrolled")})),t.addEventListener("animationend",(function(){o.style.display="none",r.forEach(e=>e.style.display="block")}));break;case"projects":s.style.left="-50%",l.style.left="-25%",t.style.right=0,a.style.right="-25%",r.forEach(e=>e.style.display="none"),t.addEventListener("transitionend",(function(){t.querySelector(".slide-2").classList.add("slide-2__scrolled"),t.querySelector(".section-name").classList.add("section-name__scrolled")})),t.addEventListener("animationend",(function(){o.style.display="none",r.forEach(e=>e.style.display="block")}));break;case"media":s.style.left="-75%",l.style.left="-50%",n.style.right="100%",t.addEventListener("transitionend",(function(){t.querySelector(".slide-1").classList.add("slide-1__scrolled"),t.querySelector(".slide-2").classList.add("slide-2__scrolled")})),t.querySelector(".slide-2").addEventListener("animationend",(function(){}))}sessionStorage.setItem("order",t.dataset.order)},expandPrimarySectionOnDesktop:t=>{const i=e.$el(".section-slider-desktop"),s=i.querySelector('[data-name="about"]'),l=i.querySelector('[data-name="hobby"]'),a=i.querySelector('[data-name="projects"]'),r=i.querySelector('[data-name="media"]');switch(o("#desktopVerticalTextSlider"),n(".hobbydesktop-","auto"),n(".projectsdesktop-","auto"),n(".mediadesktop-","auto"),t.style.width="95%",sessionStorage.setItem("order",t.dataset.order),t.dataset.name){case"about":t.querySelector(".section-desktop__content").style.right="calc(100% - 413px)",s.style.left="2.5%",l.style.left="97.5%",a.style.right="-25%",r.style.right="-90%";break;case"hobby":t.querySelector(".section-desktop__content").style.left="0px",s.style.left="-30%",l.style.left="2.5%",a.style.right="-10%",r.style.right="-40%";break;case"projects":t.querySelector(".section-name").style.left="0",s.style.left="-50%",l.style.left="-20%",a.style.right="2.5%",r.style.right="-30%";break;case"media":s.style.left="-60%",l.style.left="-30%",a.style.right="97.5%",r.style.right="2.5%"}e.initStateLinks()},changePage:t=>{t.preventDefault(),e.$el("main").classList.add("page-changing"),e.clearState(),setTimeout(()=>window.location.href=t.target.href,700)},checkIsActiveLink:e=>{e.classList.add("active"),e.previousElementSibling.classList.add("active-divider")}},t=document.getElementById("animationsPolygon"),i=document.getElementById("hamburgerSection"),s=e.$el(".primary"),l=e.$el(".news"),n=(e,t=2,i=15)=>new Swiper(e,{direction:"vertical",loop:!0,slidesPerView:t,spaceBetween:Number(i),scrollbar:{verticalClass:"d-none"},on:{afterInit:function(){let e=500;this.slides.forEach((t,i)=>{setTimeout(()=>{t.style.opacity="1"},e),e+=200})},slideChange:function(){const{activeIndex:e}=this;sessionStorage.setItem("order",this.slides[e].dataset.swiperSlideIndex)}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:e.slice(0,e.indexOf("-"))+"-next",prevEl:e.slice(0,e.indexOf("-"))+"-prev",lockClass:"d-none"}}),a=e=>{new Swiper(".primary-swiper-desktop",{slidesPerView:"auto",spaceBetween:0,loop:!0,loopedSlides:4,centeredSlides:!0,initialSlide:Number(e),keyboard:{enabled:!0,onlyInViewport:!0},on:{slideChange:function(){const{activeIndex:e}=this;sessionStorage.setItem("order",this.slides[e].dataset.swiperSlideIndex),this.slides.forEach((t,i)=>{i===e?t.querySelector(".active-content").classList.remove("active-content__inactive"):t.querySelector(".active-content").classList.add("active-content__inactive")})}}})},o=e=>new Swiper(e,{direction:"vertical",slidesPerView:"auto",freeMode:!0,scrollbar:{el:".swiper-scrollbar"},navigation:{nextEl:".vertical-text-next",prevEl:".vertical-text-prev ",lockClass:"d-none"},mousewheel:!0});let r=!1;const d=setInterval(()=>{i.querySelector(".active")&&e.$el(".hamburger__section__finally_opened")&&(e.checkIsActiveLink(e.$el(".active")),r=!0),r&&clearInterval(d)},100);t.insertAdjacentElement("afterbegin",i.cloneNode(!0)),t.querySelector("#hamburgerSection").id="";const c=t.querySelectorAll("a");if(c.forEach((e,t)=>{t!==c.length-1&&(e.style.width="auto",e.style.visibility="visible")}),e.$el(".desktop-links").querySelectorAll("a").forEach(t=>t.addEventListener("click",(function(t){e.changePage(t)}))),i.addEventListener("click",(function(t){i.classList.add("hamburger__section__opened"),i.addEventListener("animationend",()=>{i.classList.add("hamburger__section__finally_opened"),i.querySelectorAll("a").forEach((t,i)=>{i!==c.length-1&&(t.style.width=c[i].offsetWidth+"px",t.addEventListener("click",(function(t){e.changePage(t)})))})})})),s)if(e.isState())e.isDesktop()?(a(sessionStorage.getItem("order")),o("#desktopVerticalTextSlider"),n(".hobbydesktop-","auto"),n(".projectsdesktop-","auto"),n(".mediadesktop-","auto"),e.$el("main").style.opacity="1"):(new Swiper("#innerPrimarySlider",{slidesPerView:"auto",centeredSlides:!1,spaceBetween:0,loop:!0,loopedSlides:4,centeredSlides:!1,keyboard:{enabled:!0,onlyInViewport:!0},initialSlide:Number(sessionStorage.getItem("order"))}),o("#mobileVerticalTextSlider"),n(".projects-slider"),n(".hobby-slider"),n(".podcast-slider"),e.$el("main").style.transition="all .25s",setTimeout(()=>e.$el("main").style.opacity="1",1400)),e.initStateLinks(),e.clearState();else{e.$el("main").style.opacity="1";document.getElementById("primarySlider");const t=document.querySelectorAll(".section"),i=e.$el(".section-slider-desktop").querySelectorAll(".section-desktop"),s=document.getElementById("primarySwiperDesktop"),l=e.$el(".inner-section-slider");t.forEach(t=>{t.addEventListener("click",(function(){const i=t.querySelector(".slide-1").nextElementSibling;i.querySelector(".inner-section-slider")||(i.insertAdjacentElement("afterbegin",l.cloneNode(!0)),l.innerHTML="",new Swiper("#innerPrimarySlider",{slidesPerView:"auto",centeredSlides:!1,spaceBetween:0,loop:!0,loopedSlides:4,centeredSlides:!1,keyboard:{enabled:!0,onlyInViewport:!0},initialSlide:Number(t.dataset.inner)}),o("#mobileVerticalTextSlider"),n(".projects-slider"),n(".hobby-slider"),n(".podcast-slider")),e.expandPrimarySection(t)}))}),i.forEach(t=>{t.addEventListener("click",(function(){a(t.dataset.order),e.expandPrimarySectionOnDesktop(t),t.addEventListener("transitionend",()=>{s.style.top="0",setTimeout(()=>{s.classList.add("showed")},350)})}))})}if(e.$el(".black-slider")&&new Swiper(".black-slider",{direction:"vertical",loop:!0,slidesPerView:2,spaceBetween:24,scrollbar:{verticalClass:"d-none"},on:{afterInit:function(){let e=600;this.slides.forEach((t,i)=>{setTimeout(()=>{t.style.opacity="1"},e),e+=200})}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:".black-slider-next",prevEl:".black-slider-prev",lockClass:"d-none"},breakpoints:{996:{slidesPerView:2}}}),l){r&&clearInterval(d);let e=200;l.querySelectorAll(".news-item").forEach(t=>{setTimeout(()=>t.style.opacity=1,e),e+=200}),new Swiper(".horizontal-desktop-slider",{direction:"vertical",slidesPerView:"auto",spaceBetween:10,loop:!1,breakpoints:{996:{slidesPerView:3,direction:"horizontal",spaceBetween:36}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev",lockClass:"d-none"}})}e.$el(".single-page")&&new Swiper(".singlepagedesktop-",{direction:"vertical",loop:!0,slidesPerView:"auto",spaceBetween:15,scrollbar:{verticalClass:"d-none"},on:{afterInit:function(){let e=500;this.slides.forEach((t,i)=>{setTimeout(()=>{t.style.opacity="1"},e),e+=200})}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:".singlepagedesktop-next",prevEl:".singlepagedesktop-prev",lockClass:"d-none"}})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInV0aWxzIiwiJGVsIiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yIiwic2V0U3RhdGUiLCJzZXNzaW9uU3RvcmFnZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJpbm5lckhUTUwiLCJjbGVhclN0YXRlIiwicmVtb3ZlSXRlbSIsImluaXRTdGF0ZUxpbmtzIiwic2V0VGltZW91dCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsaW5rIiwiaXNTdGF0ZSIsImdldEl0ZW0iLCJpc0Rlc2t0b3AiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiZXhwYW5kUHJpbWFyeVNlY3Rpb24iLCJzZWN0aW9uIiwicHJpbWFyeVdyYXBwZXIiLCJhYm91dCIsImhvYmJ5IiwicHJvamVjdHMiLCJtZWRpYSIsImlubmVyTmFtZSIsImRhdGFzZXQiLCJuYW1lIiwic3R5bGUiLCJ3aWR0aCIsImxlZnQiLCJyaWdodCIsImNsYXNzTGlzdCIsImFkZCIsImZvckVhY2giLCJkaXNwbGF5Iiwib3V0ZXJOYW1lIiwib3JkZXIiLCJleHBhbmRQcmltYXJ5U2VjdGlvbk9uRGVza3RvcCIsImRlc2t0b3BQcmltYXJ5V3JhcHBlciIsImluaXRWZXJ0aWNhbFNsaWRlciIsImluaXRWZXJ0aWNhbFRleHRTbGlkZXIiLCJlIiwibG9jYXRpb24iLCJocmVmIiwidGFyZ2V0IiwiY2hlY2tJc0FjdGl2ZUxpbmsiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwiZ2V0RWxlbWVudEJ5SWQiLCJwcmltYXJ5Iiwic3BhY2VCZXR3ZWVuIiwiU3dpcGVyIiwiYW5pbWF0aW9uc1BvbHlnb24iLCJoYW1idXJnZXJNZW51Iiwic2xpZGVzUGVyVmlldyIsIk51bWJlciIsInNjcm9sbGJhciIsIm9uIiwiYWZ0ZXJJbml0IiwiZGVsYXkiLCJ0aGlzIiwic2xpZGUiLCJuIiwib3BhY2l0eSIsInNsaWRlcyIsImFjdGl2ZUluZGV4Iiwic3dpcGVyU2xpZGVJbmRleCIsImtleWJvYXJkIiwic2xpZGVDaGFuZ2UiLCJvbmx5SW5WaWV3cG9ydCIsIm1vdXNld2hlZWwiLCJuYXZpZ2F0aW9uIiwibmV4dEVsIiwic2xpY2UiLCJpbmRleE9mIiwicHJldkVsIiwibG9ja0NsYXNzIiwiaW5pdGlhbFNsaWRlUG9zaWl0b24iLCJsb29wIiwibG9vcGVkU2xpZGVzIiwiY2VudGVyZWRTbGlkZXMiLCJpbml0aWFsU2xpZGUiLCJpbml0RGVza3RvcElubmVyU2xpZGVyIiwiZW5hYmxlZCIsInJlbW92ZSIsImRpcmVjdGlvbiIsImZyZWVNb2RlIiwiZWwiLCJzZXRJbnRlcnZhbCIsImlzTWFya2VkIiwiY2xlYXJJbnRlcnZhbCIsIm1lbnVJbnRlcnZhbCIsImNsb25lTm9kZSIsImlkIiwiaGVhZGVyTGlua3NDb3B5IiwiYSIsImkiLCJ2aXNpYmlsaXR5IiwiY2hhbmdlUGFnZSIsImxlbmd0aCIsIm9mZnNldFdpZHRoIiwidHJhbnNpdGlvbiIsInByaW1hcnlTZWN0aW9ucyIsInByaW1hcnlTbGlkZXJTZWN0aW9uIiwiJGlubmVyU2xpZGVyRWwiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJ3cmFwcGVyIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiaW5uZXIiLCJkZXNrdG9wUHJpbWFyeVNlY3Rpb25zIiwidG9wIiwiZGVza3RvcFByaW1hcnlJbm5lclNsaWRlciIsInZlcnRpY2FsQ2xhc3MiLCJicmVha3BvaW50cyIsIm5ld3MiLCJpdGVtIiwiOTk2Il0sIm1hcHBpbmdzIjoiQUFBQUEsU0FBU0MsaUJBQWlCLG9CQUFvQixXQUMxQyxNQUFNQyxFQUFRLENBQ1BDLElBQUdDLEdBQWFKLFNBQVNLLGNBQWNELEdBQzFDRSxTQUFVLEtBQ05DLGVBQWVDLFFBQVEsUUFBY0MsS0FBQUEsVUFBZ0JOLEVBQUlBLElBQUEsZUFBZU8sYUFFNUVDLFdBQVksS0FDUkosZUFBZUssV0FBVyxVQUU5QkMsZUFBZ0IsS0FFWkMsV0FBaUIsS0FDY2QsU0FBQ2UsaUJBQWlCLGVBQzFC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LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCB1dGlscyA9IHtcclxuICAgICAgICAkZWw6IChzZWxlY3RvcikgPT4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvciksXHJcbiAgICAgICAgc2V0U3RhdGU6ICgpID0+IHtcclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnc3RhdGUnLCBKU09OLnN0cmluZ2lmeSh1dGlscy4kZWwoJy5pbmRleC1tYWluJykuaW5uZXJIVE1MKSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNsZWFyU3RhdGU6ICgpID0+IHtcclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnc3RhdGUnKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaW5pdFN0YXRlTGlua3M6ICgpID0+IHtcclxuICAgICAgICAgICAgLy8g0KHRgdGL0LvQutC4LCDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC60L7RgtC+0YDRi9GFINGB0L7RhdGA0LDQvdGP0LXRgtGB0Y8g0YHQvtGB0YLQvtGP0L3QuNC1INGE0YDQvtC90YLQsCDQvdCwINCz0LvQsNCy0L3QvtC5INGB0YLRgNCw0L3QuNGG0LVcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzdGF0ZUxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN0YXRlLWxpbmsnKVxyXG4gICAgICAgICAgICAgICAgc3RhdGVMaW5rcy5mb3JFYWNoKGxpbmsgPT4gbGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB1dGlscy5zZXRTdGF0ZSgpXHJcbiAgICAgICAgICAgICAgICB9KSlcclxuICAgICAgICAgICAgfSwgMTAwMClcclxuICAgICAgICB9LFxyXG4gICAgICAgIGlzU3RhdGU6ICgpID0+ICEhc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnc3RhdGUnKSxcclxuICAgICAgICBpc0Rlc2t0b3A6ICgpID0+IHdpbmRvdy5pbm5lcldpZHRoID49IDk5NixcclxuICAgICAgICBleHBhbmRQcmltYXJ5U2VjdGlvbjogKHNlY3Rpb24pID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcHJpbWFyeVdyYXBwZXIgPSB1dGlscy4kZWwoJy5zZWN0aW9uLXNsaWRlcicpXHJcbiAgICAgICAgICAgIGNvbnN0IGFib3V0ID0gcHJpbWFyeVdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtbmFtZT1cImFib3V0XCJdJylcclxuICAgICAgICAgICAgY29uc3QgaG9iYnkgPSBwcmltYXJ5V3JhcHBlci5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uYW1lPVwiaG9iYnlcIl0nKVxyXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0cyA9IHByaW1hcnlXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5hbWU9XCJwcm9qZWN0c1wiXScpXHJcbiAgICAgICAgICAgIGNvbnN0IG1lZGlhID0gcHJpbWFyeVdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtbmFtZT1cIm1lZGlhXCJdJylcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IG91dGVyTmFtZSA9IHNlY3Rpb24ucXVlcnlTZWxlY3RvcihgW2RhdGEtcG9zaXRpb24tJHtzZWN0aW9uLmRhdGFzZXQubmFtZX09XCJvdXRlclwiXWApXHJcbiAgICAgICAgICAgIGNvbnN0IGlubmVyTmFtZSA9IHNlY3Rpb24ucXVlcnlTZWxlY3RvckFsbChgW2RhdGEtcG9zaXRpb24tJHtzZWN0aW9uLmRhdGFzZXQubmFtZX09XCJpbm5lclwiXWApXHJcbiAgICAgICAgICAgIHV0aWxzLmluaXRTdGF0ZUxpbmtzKClcclxuICAgICAgICAgICAgc2VjdGlvbi5zdHlsZS53aWR0aCA9ICcxMDAlJ1xyXG4gICAgICAgICAgICBzd2l0Y2ggKHNlY3Rpb24uZGF0YXNldC5uYW1lKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdhYm91dCc6XHJcbiAgICAgICAgICAgICAgICAgICAgaG9iYnkuc3R5bGUubGVmdCA9ICcxMDAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2plY3RzLnN0eWxlLnJpZ2h0ID0gJy01MCUnXHJcbiAgICAgICAgICAgICAgICAgICAgbWVkaWEuc3R5bGUucmlnaHQgPSAnLTcwJSdcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTEnKS5jbGFzc0xpc3QuYWRkKCdzbGlkZS0xX19zY3JvbGxlZCcpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTMnKS5jbGFzc0xpc3QuYWRkKCdzbGlkZS0zX19zY3JvbGxlZCcpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2hvYmJ5JzpcclxuICAgICAgICAgICAgICAgICAgICBhYm91dC5zdHlsZS5sZWZ0ID0gJy0yNSUnXHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5zdHlsZS5sZWZ0ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0cy5zdHlsZS5yaWdodCA9ICctMjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIG1lZGlhLnN0eWxlLnJpZ2h0ID0gJy01MCUnXHJcbiAgICAgICAgICAgICAgICAgICAgaW5uZXJOYW1lLmZvckVhY2gobmFtZSA9PiBuYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZScpXHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZS0xJykuY2xhc3NMaXN0LmFkZCgnc2xpZGUtMV9fc2Nyb2xsZWQnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLW5hbWUnKS5jbGFzc0xpc3QuYWRkKCdzZWN0aW9uLW5hbWVfX3Njcm9sbGVkJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2xpZGUtMicpLmNsYXNzTGlzdC5hZGQoJ3NsaWRlLTJfX3Njcm9sbGVkJylcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRlck5hbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbm5lck5hbWUuZm9yRWFjaChuYW1lID0+IG5hbWUuc3R5bGUuZGlzcGxheSA9ICdibG9jaycpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ3Byb2plY3RzJzpcclxuICAgICAgICAgICAgICAgICAgICBhYm91dC5zdHlsZS5sZWZ0ID0gJy01MCUnXHJcbiAgICAgICAgICAgICAgICAgICAgaG9iYnkuc3R5bGUubGVmdCA9ICctMjUlJztcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnN0eWxlLnJpZ2h0ID0gMFxyXG4gICAgICAgICAgICAgICAgICAgIG1lZGlhLnN0eWxlLnJpZ2h0ID0gJy0yNSUnXHJcbiAgICAgICAgICAgICAgICAgICAgaW5uZXJOYW1lLmZvckVhY2gobmFtZSA9PiBuYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZScpXHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZS0yJykuY2xhc3NMaXN0LmFkZCgnc2xpZGUtMl9fc2Nyb2xsZWQnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLW5hbWUnKS5jbGFzc0xpc3QuYWRkKCdzZWN0aW9uLW5hbWVfX3Njcm9sbGVkJylcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRlck5hbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbm5lck5hbWUuZm9yRWFjaChuYW1lID0+IG5hbWUuc3R5bGUuZGlzcGxheSA9ICdibG9jaycpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ21lZGlhJzpcclxuICAgICAgICAgICAgICAgICAgICBhYm91dC5zdHlsZS5sZWZ0ID0gJy03NSUnXHJcbiAgICAgICAgICAgICAgICAgICAgaG9iYnkuc3R5bGUubGVmdCA9ICctNTAlJztcclxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0cy5zdHlsZS5yaWdodCA9ICcxMDAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIG1lZGlhLnN0eWxlLnJpZ2h0ID0gJy0xMDAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2xpZGUtMScpLmNsYXNzTGlzdC5hZGQoJ3NsaWRlLTFfX3Njcm9sbGVkJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2xpZGUtMicpLmNsYXNzTGlzdC5hZGQoJ3NsaWRlLTJfX3Njcm9sbGVkJylcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTInKS5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBmdW5jdGlvbiAoKSB7fSlcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdvcmRlcicsIHNlY3Rpb24uZGF0YXNldC5vcmRlcilcclxuICAgICAgICB9LFxyXG4gICAgICAgIGV4cGFuZFByaW1hcnlTZWN0aW9uT25EZXNrdG9wOiAoc2VjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBkZXNrdG9wUHJpbWFyeVdyYXBwZXIgPSB1dGlscy4kZWwoJy5zZWN0aW9uLXNsaWRlci1kZXNrdG9wJylcclxuICAgICAgICAgICAgY29uc3QgYWJvdXQgPSBkZXNrdG9wUHJpbWFyeVdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtbmFtZT1cImFib3V0XCJdJylcclxuICAgICAgICAgICAgY29uc3QgaG9iYnkgPSBkZXNrdG9wUHJpbWFyeVdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtbmFtZT1cImhvYmJ5XCJdJylcclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdHMgPSBkZXNrdG9wUHJpbWFyeVdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtbmFtZT1cInByb2plY3RzXCJdJylcclxuICAgICAgICAgICAgY29uc3QgbWVkaWEgPSBkZXNrdG9wUHJpbWFyeVdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtbmFtZT1cIm1lZGlhXCJdJylcclxuICAgICAgICAgICAgaW5pdFZlcnRpY2FsVGV4dFNsaWRlcignI2Rlc2t0b3BWZXJ0aWNhbFRleHRTbGlkZXInKVxyXG4gICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5ob2JieWRlc2t0b3AtJywgJ2F1dG8nKVxyXG4gICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5wcm9qZWN0c2Rlc2t0b3AtJywgJ2F1dG8nKVxyXG4gICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5tZWRpYWRlc2t0b3AtJywgJ2F1dG8nKVxyXG4gICAgICAgICAgICBzZWN0aW9uLnN0eWxlLndpZHRoID0gJzk1JSdcclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnb3JkZXInLCBzZWN0aW9uLmRhdGFzZXQub3JkZXIpXHJcbiAgICAgICAgICAgIHN3aXRjaCAoc2VjdGlvbi5kYXRhc2V0Lm5hbWUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2Fib3V0JzpcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRlc2t0b3BfX2NvbnRlbnQnKS5zdHlsZS5yaWdodCA9ICdjYWxjKDEwMCUgLSA0MTNweCknXHJcbiAgICAgICAgICAgICAgICAgICAgYWJvdXQuc3R5bGUubGVmdCA9ICcyLjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGhvYmJ5LnN0eWxlLmxlZnQgPSAnOTcuNSUnXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdHMuc3R5bGUucmlnaHQgPSAnLTI1JSdcclxuICAgICAgICAgICAgICAgICAgICBtZWRpYS5zdHlsZS5yaWdodCA9ICctOTAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnaG9iYnknOlxyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNlY3Rpb24tZGVza3RvcF9fY29udGVudCcpLnN0eWxlLmxlZnQgPSAnMHB4J1xyXG4gICAgICAgICAgICAgICAgICAgIGFib3V0LnN0eWxlLmxlZnQgPSAnLTMwJSdcclxuICAgICAgICAgICAgICAgICAgICBob2JieS5zdHlsZS5sZWZ0ID0gJzIuNSUnXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdHMuc3R5bGUucmlnaHQgPSAnLTEwJSdcclxuICAgICAgICAgICAgICAgICAgICBtZWRpYS5zdHlsZS5yaWdodCA9ICctNDAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAncHJvamVjdHMnOlxyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNlY3Rpb24tbmFtZScpLnN0eWxlLmxlZnQgPSAnMCdcclxuICAgICAgICAgICAgICAgICAgICBhYm91dC5zdHlsZS5sZWZ0ID0gJy01MCUnXHJcbiAgICAgICAgICAgICAgICAgICAgaG9iYnkuc3R5bGUubGVmdCA9ICctMjAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2plY3RzLnN0eWxlLnJpZ2h0ID0gJzIuNSUnXHJcbiAgICAgICAgICAgICAgICAgICAgbWVkaWEuc3R5bGUucmlnaHQgPSAnLTMwJSdcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ21lZGlhJzpcclxuICAgICAgICAgICAgICAgICAgICBhYm91dC5zdHlsZS5sZWZ0ID0gJy02MCUnXHJcbiAgICAgICAgICAgICAgICAgICAgaG9iYnkuc3R5bGUubGVmdCA9ICctMzAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2plY3RzLnN0eWxlLnJpZ2h0ID0gJzk3LjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIG1lZGlhLnN0eWxlLnJpZ2h0ID0gJzIuNSUnXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdXRpbHMuaW5pdFN0YXRlTGlua3MoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2hhbmdlUGFnZTogKGUpID0+IHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICAgICAgICAgIHV0aWxzLiRlbCgnbWFpbicpLmNsYXNzTGlzdC5hZGQoJ3BhZ2UtY2hhbmdpbmcnKVxyXG4gICAgICAgICAgICB1dGlscy5jbGVhclN0YXRlKClcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGUudGFyZ2V0LmhyZWYsIDcwMClcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNoZWNrSXNBY3RpdmVMaW5rOiAobGluaykgPT4ge1xyXG4gICAgICAgICAgICBsaW5rLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpXHJcbiAgICAgICAgICAgIGxpbmsucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdhY3RpdmUtZGl2aWRlcicpXHJcbiAgICAgICAgfSxcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBhbmltYXRpb25zUG9seWdvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhbmltYXRpb25zUG9seWdvbicpXHJcbiAgICBjb25zdCBoYW1idXJnZXJNZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hhbWJ1cmdlclNlY3Rpb24nKVxyXG4gICAgY29uc3QgcHJpbWFyeSA9IHV0aWxzLiRlbCgnLnByaW1hcnknKVxyXG4gICAgY29uc3QgbmV3cyA9IHV0aWxzLiRlbCgnLm5ld3MnKVxyXG5cclxuICAgIGNvbnN0IGluaXRWZXJ0aWNhbFNsaWRlciA9ICgkZWwsIHNsaWRlc1BlclZpZXcgPSAyLCBzcGFjZUJldHdlZW4gPSAxNSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgU3dpcGVyKCRlbCwge1xyXG4gICAgICAgICAgICAvLyBPcHRpb25hbCBwYXJhbWV0ZXJzXHJcbiAgICAgICAgICAgIGRpcmVjdGlvbjogJ3ZlcnRpY2FsJyxcclxuICAgICAgICAgICAgbG9vcDogdHJ1ZSxcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogc2xpZGVzUGVyVmlldyxcclxuICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiBOdW1iZXIoc3BhY2VCZXR3ZWVuKSxcclxuICAgICAgICAgICAgc2Nyb2xsYmFyOiB7XHJcbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbENsYXNzOiAnZC1ub25lJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBvbjoge1xyXG4gICAgICAgICAgICAgICAgYWZ0ZXJJbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGRlbGF5ID0gNTAwXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zbGlkZXMuZm9yRWFjaCgoc2xpZGUsIG4pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZS5zdHlsZS5vcGFjaXR5ID0gJzEnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGRlbGF5KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxheSArPSAyMDBcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHNsaWRlQ2hhbmdlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZUluZGV4XHJcbiAgICAgICAgICAgICAgICAgICAgfSA9IHRoaXNcclxuICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdvcmRlcicsIHRoaXMuc2xpZGVzW2FjdGl2ZUluZGV4XS5kYXRhc2V0LnN3aXBlclNsaWRlSW5kZXgpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGtleWJvYXJkOiB7XHJcbiAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgb25seUluVmlld3BvcnQ6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1vdXNld2hlZWw6IHRydWUsXHJcbiAgICAgICAgICAgIC8vIE5hdmlnYXRpb24gYXJyb3dzXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogYCR7JGVsLnNsaWNlKDAsICRlbC5pbmRleE9mKCctJykpfS1uZXh0YCxcclxuICAgICAgICAgICAgICAgIHByZXZFbDogYCR7JGVsLnNsaWNlKDAsICRlbC5pbmRleE9mKCctJykpfS1wcmV2YCxcclxuICAgICAgICAgICAgICAgIGxvY2tDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBpbml0RGVza3RvcElubmVyU2xpZGVyID0gKGluaXRpYWxTbGlkZVBvc2lpdG9uKSA9PiB7XHJcbiAgICAgICAgbmV3IFN3aXBlcignLnByaW1hcnktc3dpcGVyLWRlc2t0b3AnLCB7XHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IFwiYXV0b1wiLFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDAsXHJcbiAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgIGxvb3BlZFNsaWRlczogNCxcclxuICAgICAgICAgICAgY2VudGVyZWRTbGlkZXM6IHRydWUsXHJcbiAgICAgICAgICAgIGluaXRpYWxTbGlkZTogTnVtYmVyKGluaXRpYWxTbGlkZVBvc2lpdG9uKSxcclxuICAgICAgICAgICAga2V5Ym9hcmQ6IHtcclxuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBvbmx5SW5WaWV3cG9ydDogdHJ1ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb246IHtcclxuICAgICAgICAgICAgICAgIHNsaWRlQ2hhbmdlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmVJbmRleFxyXG4gICAgICAgICAgICAgICAgICAgIH0gPSB0aGlzXHJcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnb3JkZXInLCB0aGlzLnNsaWRlc1thY3RpdmVJbmRleF0uZGF0YXNldC5zd2lwZXJTbGlkZUluZGV4KVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2xpZGVzLmZvckVhY2goKHNsaWRlLCBuKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuID09PSBhY3RpdmVJbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUucXVlcnlTZWxlY3RvcignLmFjdGl2ZS1jb250ZW50JykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlLWNvbnRlbnRfX2luYWN0aXZlJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNsaWRlLnF1ZXJ5U2VsZWN0b3IoJy5pbmFjdGl2ZS1jb250ZW50Jykuc3R5bGUub3BhY2l0eSA9ICcwJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUucXVlcnlTZWxlY3RvcignLmFjdGl2ZS1jb250ZW50JykuY2xhc3NMaXN0LmFkZCgnYWN0aXZlLWNvbnRlbnRfX2luYWN0aXZlJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgaW5pdFZlcnRpY2FsVGV4dFNsaWRlciA9ICgkZWwpID0+IHtcclxuICAgICAgICByZXR1cm4gbmV3IFN3aXBlcigkZWwsIHtcclxuICAgICAgICAgICAgZGlyZWN0aW9uOiBcInZlcnRpY2FsXCIsXHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IFwiYXV0b1wiLFxyXG4gICAgICAgICAgICBmcmVlTW9kZTogdHJ1ZSxcclxuICAgICAgICAgICAgc2Nyb2xsYmFyOiB7XHJcbiAgICAgICAgICAgICAgICBlbDogXCIuc3dpcGVyLXNjcm9sbGJhclwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICBuZXh0RWw6IGAudmVydGljYWwtdGV4dC1uZXh0YCxcclxuICAgICAgICAgICAgICAgIHByZXZFbDogYC52ZXJ0aWNhbC10ZXh0LXByZXYgYCxcclxuICAgICAgICAgICAgICAgIGxvY2tDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbW91c2V3aGVlbDogdHJ1ZSxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGxldCBpc01hcmtlZCA9IGZhbHNlO1xyXG4gICAgY29uc3QgbWVudUludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICAgIGlmIChoYW1idXJnZXJNZW51LnF1ZXJ5U2VsZWN0b3IoJy5hY3RpdmUnKSAmJiB1dGlscy4kZWwoJy5oYW1idXJnZXJfX3NlY3Rpb25fX2ZpbmFsbHlfb3BlbmVkJykpIHtcclxuICAgICAgICAgICAgdXRpbHMuY2hlY2tJc0FjdGl2ZUxpbmsodXRpbHMuJGVsKCcuYWN0aXZlJykpXHJcbiAgICAgICAgICAgIGlzTWFya2VkID0gdHJ1ZVxyXG4gICAgICAgIH1cclxuICAgICAgICBpc01hcmtlZCAmJiBjbGVhckludGVydmFsKG1lbnVJbnRlcnZhbClcclxuICAgIH0sIDEwMClcclxuXHJcbiAgICAvLyDQmtC70L7QvdC40YDRg9C10Lwg0YjQsNC/0LrRgywg0YfRgtC+0LHRiyDQstGL0YfQuNGB0LvQuNGC0Ywg0LTQu9C40L3RgyDQv9GD0L3QutGC0L7QsiDQvNC10L3RjiDQtNC70Y8g0LjRhSDQv9C70LDQstC90L7QuSDQsNC90LjQvNCw0YbQuNC4XHJcbiAgICBhbmltYXRpb25zUG9seWdvbi5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyYmVnaW4nLCBoYW1idXJnZXJNZW51LmNsb25lTm9kZSh0cnVlKSlcclxuICAgIGFuaW1hdGlvbnNQb2x5Z29uLnF1ZXJ5U2VsZWN0b3IoJyNoYW1idXJnZXJTZWN0aW9uJykuaWQgPSAnJ1xyXG4gICAgY29uc3QgaGVhZGVyTGlua3NDb3B5ID0gYW5pbWF0aW9uc1BvbHlnb24ucXVlcnlTZWxlY3RvckFsbCgnYScpXHJcbiAgICBoZWFkZXJMaW5rc0NvcHkuZm9yRWFjaCgoYSwgaSkgPT4ge1xyXG4gICAgICAgIGlmIChpICE9PSBoZWFkZXJMaW5rc0NvcHkubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICBhLnN0eWxlLndpZHRoID0gJ2F1dG8nXHJcbiAgICAgICAgICAgIGEuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJ1xyXG4gICAgICAgIH1cclxuICAgIH0pXHJcblxyXG4gICAgdXRpbHMuJGVsKCcuZGVza3RvcC1saW5rcycpLnF1ZXJ5U2VsZWN0b3JBbGwoJ2EnKS5mb3JFYWNoKGEgPT4gYS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgdXRpbHMuY2hhbmdlUGFnZShlKVxyXG4gICAgfSkpXHJcblxyXG4gICAgaGFtYnVyZ2VyTWVudS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgaGFtYnVyZ2VyTWVudS5jbGFzc0xpc3QuYWRkKCdoYW1idXJnZXJfX3NlY3Rpb25fX29wZW5lZCcpXHJcbiAgICAgICAgaGFtYnVyZ2VyTWVudS5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGhhbWJ1cmdlck1lbnUuY2xhc3NMaXN0LmFkZCgnaGFtYnVyZ2VyX19zZWN0aW9uX19maW5hbGx5X29wZW5lZCcpXHJcbiAgICAgICAgICAgIGhhbWJ1cmdlck1lbnUucXVlcnlTZWxlY3RvckFsbCgnYScpLmZvckVhY2goKGEsIGkpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpICE9PSBoZWFkZXJMaW5rc0NvcHkubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGEuc3R5bGUud2lkdGggPSBoZWFkZXJMaW5rc0NvcHlbaV0ub2Zmc2V0V2lkdGggKyAncHgnXHJcbiAgICAgICAgICAgICAgICAgICAgYS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmNoYW5nZVBhZ2UoZSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxuICAgIC8vINCV0YHQu9C4INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQvdCwINCz0LvQsNCy0L3QvtC5XHJcbiAgICBpZiAocHJpbWFyeSkge1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBpZiAodXRpbHMuaXNTdGF0ZSgpKSB7XHJcbiAgICAgICAgICAgIGlmICh1dGlscy5pc0Rlc2t0b3AoKSkge1xyXG4gICAgICAgICAgICAgICAgaW5pdERlc2t0b3BJbm5lclNsaWRlcihzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdvcmRlcicpKVxyXG4gICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsVGV4dFNsaWRlcignI2Rlc2t0b3BWZXJ0aWNhbFRleHRTbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcuaG9iYnlkZXNrdG9wLScsICdhdXRvJylcclxuICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFNsaWRlcignLnByb2plY3RzZGVza3RvcC0nLCAnYXV0bycpXHJcbiAgICAgICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5tZWRpYWRlc2t0b3AtJywgJ2F1dG8nKVxyXG4gICAgICAgICAgICAgICAgdXRpbHMuJGVsKCdtYWluJykuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbmV3IFN3aXBlcignI2lubmVyUHJpbWFyeVNsaWRlcicsIHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiBcImF1dG9cIixcclxuICAgICAgICAgICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9vcGVkU2xpZGVzOiA0LFxyXG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBrZXlib2FyZDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbmx5SW5WaWV3cG9ydDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxTbGlkZTogTnVtYmVyKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ29yZGVyJykpLFxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFRleHRTbGlkZXIoJyNtb2JpbGVWZXJ0aWNhbFRleHRTbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcucHJvamVjdHMtc2xpZGVyJylcclxuICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFNsaWRlcignLmhvYmJ5LXNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5wb2RjYXN0LXNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICB1dGlscy4kZWwoJ21haW4nKS5zdHlsZS50cmFuc2l0aW9uID0gJ2FsbCAuMjVzJ1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB1dGlscy4kZWwoJ21haW4nKS5zdHlsZS5vcGFjaXR5ID0gJzEnLCAxNDAwKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHV0aWxzLmluaXRTdGF0ZUxpbmtzKClcclxuICAgICAgICAgICAgdXRpbHMuY2xlYXJTdGF0ZSgpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdXRpbHMuJGVsKCdtYWluJykuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gICAgICAgICAgICBjb25zdCBwcmltYXJ5U2xpZGVyU2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmltYXJ5U2xpZGVyJylcclxuICAgICAgICAgICAgY29uc3QgcHJpbWFyeVNlY3Rpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlY3Rpb24nKVxyXG4gICAgICAgICAgICBjb25zdCBkZXNrdG9wUHJpbWFyeVdyYXBwZXIgPSB1dGlscy4kZWwoJy5zZWN0aW9uLXNsaWRlci1kZXNrdG9wJylcclxuICAgICAgICAgICAgY29uc3QgZGVza3RvcFByaW1hcnlTZWN0aW9ucyA9IGRlc2t0b3BQcmltYXJ5V3JhcHBlci5xdWVyeVNlbGVjdG9yQWxsKCcuc2VjdGlvbi1kZXNrdG9wJylcclxuICAgICAgICAgICAgY29uc3QgZGVza3RvcFByaW1hcnlJbm5lclNsaWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmltYXJ5U3dpcGVyRGVza3RvcCcpXHJcbiAgICAgICAgICAgIGNvbnN0ICRpbm5lclNsaWRlckVsID0gdXRpbHMuJGVsKCcuaW5uZXItc2VjdGlvbi1zbGlkZXInKVxyXG5cclxuICAgICAgICAgICAgLy8g0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC60LvQuNC6INC90LAg0LPQu9Cw0LLQvdC+0Lkg0LIg0LzQvtCx0LjQu9GM0L3QvtC5INCy0LXRgNGB0LjQuFxyXG4gICAgICAgICAgICBwcmltYXJ5U2VjdGlvbnMuZm9yRWFjaChzZWN0aW9uID0+IHtcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgd3JhcHBlciA9IHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTEnKS5uZXh0RWxlbWVudFNpYmxpbmdcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXdyYXBwZXIucXVlcnlTZWxlY3RvcignLmlubmVyLXNlY3Rpb24tc2xpZGVyJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5pbnNlcnRBZGphY2VudEVsZW1lbnQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYWZ0ZXJiZWdpbicsICRpbm5lclNsaWRlckVsLmNsb25lTm9kZSh0cnVlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5uZXJTbGlkZXJFbC5pbm5lckhUTUwgPSAnJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgU3dpcGVyKCcjaW5uZXJQcmltYXJ5U2xpZGVyJywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFjZUJldHdlZW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9vcGVkU2xpZGVzOiA0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VudGVyZWRTbGlkZXM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5Ym9hcmQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ubHlJblZpZXdwb3J0OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxTbGlkZTogTnVtYmVyKHNlY3Rpb24uZGF0YXNldC5pbm5lciksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFRleHRTbGlkZXIoJyNtb2JpbGVWZXJ0aWNhbFRleHRTbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5wcm9qZWN0cy1zbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5ob2JieS1zbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5wb2RjYXN0LXNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLmV4cGFuZFByaW1hcnlTZWN0aW9uKHNlY3Rpb24pXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLy8g0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC60LvQuNC6INC90LAg0LPQu9Cw0LLQvdC+0Lkg0LIg0LTQtdGB0LrRgtC+0L/QvdC+0Lkg0LLQtdGA0YHQuNC4XHJcbiAgICAgICAgICAgIGRlc2t0b3BQcmltYXJ5U2VjdGlvbnMuZm9yRWFjaChzZWN0aW9uID0+IHtcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5pdERlc2t0b3BJbm5lclNsaWRlcihzZWN0aW9uLmRhdGFzZXQub3JkZXIpXHJcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZXhwYW5kUHJpbWFyeVNlY3Rpb25PbkRlc2t0b3Aoc2VjdGlvbilcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2t0b3BQcmltYXJ5SW5uZXJTbGlkZXIuc3R5bGUudG9wID0gJzAnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVza3RvcFByaW1hcnlJbm5lclNsaWRlci5jbGFzc0xpc3QuYWRkKCdzaG93ZWQnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAzNTApXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh1dGlscy4kZWwoJy5ibGFjay1zbGlkZXInKSkge1xyXG4gICAgICAgIG5ldyBTd2lwZXIoJy5ibGFjay1zbGlkZXInLCB7XHJcbiAgICAgICAgICAgIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcclxuICAgICAgICAgICAgZGlyZWN0aW9uOiAndmVydGljYWwnLFxyXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAyLFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDI0LFxyXG4gICAgICAgICAgICBzY3JvbGxiYXI6IHtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsQ2xhc3M6ICdkLW5vbmUnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9uOiB7XHJcbiAgICAgICAgICAgICAgICBhZnRlckluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZGVsYXkgPSA2MDBcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNsaWRlcy5mb3JFYWNoKChzbGlkZSwgbikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlLnN0eWxlLm9wYWNpdHkgPSAnMSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgZGVsYXkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5ICs9IDIwMFxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGtleWJvYXJkOiB7XHJcbiAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgb25seUluVmlld3BvcnQ6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1vdXNld2hlZWw6IHRydWUsXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogYC5ibGFjay1zbGlkZXItbmV4dGAsXHJcbiAgICAgICAgICAgICAgICBwcmV2RWw6IGAuYmxhY2stc2xpZGVyLXByZXZgLFxyXG4gICAgICAgICAgICAgICAgbG9ja0NsYXNzOiAnZC1ub25lJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBicmVha3BvaW50czoge1xyXG4gICAgICAgICAgICAgICAgOTk2OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMixcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChuZXdzKSB7XHJcbiAgICAgICAgaXNNYXJrZWQgJiYgY2xlYXJJbnRlcnZhbChtZW51SW50ZXJ2YWwpXHJcbiAgICAgICAgbGV0IGRlbGF5ID0gMjAwXHJcbiAgICAgICAgbmV3cy5xdWVyeVNlbGVjdG9yQWxsKCcubmV3cy1pdGVtJykuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiBpdGVtLnN0eWxlLm9wYWNpdHkgPSAxLCBkZWxheSlcclxuICAgICAgICAgICAgZGVsYXkgKz0gMjAwXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgbmV3IFN3aXBlcignLmhvcml6b250YWwtZGVza3RvcC1zbGlkZXInLCB7XHJcbiAgICAgICAgICAgIGRpcmVjdGlvbjogJ3ZlcnRpY2FsJyxcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogJ2F1dG8nLFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDEwLFxyXG4gICAgICAgICAgICBsb29wOiBmYWxzZSxcclxuICAgICAgICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgICAgICAgIDk5Njoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAzNixcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAga2V5Ym9hcmQ6IHtcclxuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBvbmx5SW5WaWV3cG9ydDogdHJ1ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbW91c2V3aGVlbDogdHJ1ZSxcclxuICAgICAgICAgICAgbmF2aWdhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgbmV4dEVsOiBgLnN3aXBlci1idXR0b24tbmV4dGAsXHJcbiAgICAgICAgICAgICAgICBwcmV2RWw6IGAuc3dpcGVyLWJ1dHRvbi1wcmV2YCxcclxuICAgICAgICAgICAgICAgIGxvY2tDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh1dGlscy4kZWwoJy5zaW5nbGUtcGFnZScpKSB7XHJcbiAgICAgICAgLy8gaW5pdFZlcnRpY2FsU2xpZGVyKCcuc2luZ2xlcGFnZWRlc2t0b3AtJywgJ2F1dG8nKVxyXG4gICAgICAgIG5ldyBTd2lwZXIoJy5zaW5nbGVwYWdlZGVza3RvcC0nLCB7XHJcbiAgICAgICAgICAgIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcclxuICAgICAgICAgICAgZGlyZWN0aW9uOiAndmVydGljYWwnLFxyXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAnYXV0bycsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMTUsXHJcbiAgICAgICAgICAgIHNjcm9sbGJhcjoge1xyXG4gICAgICAgICAgICAgICAgdmVydGljYWxDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb246IHtcclxuICAgICAgICAgICAgICAgIGFmdGVySW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkZWxheSA9IDUwMFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2xpZGVzLmZvckVhY2goKHNsaWRlLCBuKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBkZWxheSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXkgKz0gMjAwXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGtleWJvYXJkOiB7XHJcbiAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgb25seUluVmlld3BvcnQ6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1vdXNld2hlZWw6IHRydWUsXHJcbiAgICAgICAgICAgIC8vIE5hdmlnYXRpb24gYXJyb3dzXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogYC5zaW5nbGVwYWdlZGVza3RvcC1uZXh0YCxcclxuICAgICAgICAgICAgICAgIHByZXZFbDogYC5zaW5nbGVwYWdlZGVza3RvcC1wcmV2YCxcclxuICAgICAgICAgICAgICAgIGxvY2tDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSkiXX0=
