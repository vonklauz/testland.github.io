document.addEventListener("DOMContentLoaded",(function(){const e={$el:e=>document.querySelector(e),setState:()=>{sessionStorage.setItem("state",JSON.stringify(e.$el(".index-main").innerHTML))},clearState:()=>{sessionStorage.removeItem("state")},initStateLinks:()=>{setTimeout(()=>{document.querySelectorAll(".state-link").forEach(t=>t.addEventListener("click",()=>{e.setState()}))},1e3)},isState:()=>!!sessionStorage.getItem("state"),isDesktop:()=>window.innerWidth>=996,expandPrimarySection:t=>{const i=e.$el(".section-slider"),s=i.querySelector('[data-name="about"]'),l=i.querySelector('[data-name="hobby"]'),n=i.querySelector('[data-name="projects"]'),o=i.querySelector('[data-name="media"]'),a=t.querySelector(`[data-position-${t.dataset.name}="outer"]`),r=t.querySelectorAll(`[data-position-${t.dataset.name}="inner"]`);switch(console.log(r),e.initStateLinks(),t.style.width="100%",t.dataset.name){case"about":l.style.left="100%",n.style.right="-50%",o.style.right="-70%",t.addEventListener("transitionend",(function(){t.querySelector(".slide-1").classList.add("slide-1__scrolled"),t.querySelector(".slide-3").classList.add("slide-3__scrolled")}));break;case"hobby":s.style.left="-25%",t.style.left=0,n.style.right="-25%",o.style.right="-50%",r.forEach(e=>e.style.display="none"),t.addEventListener("transitionend",(function(){t.querySelector(".slide-1").classList.add("slide-1__scrolled"),t.querySelector(".section-name").classList.add("section-name__scrolled"),t.querySelector(".slide-2").classList.add("slide-2__scrolled")})),t.addEventListener("animationend",(function(){a.style.display="none",r.forEach(e=>{console.log(e),e.style.display="block"})}));break;case"projects":s.style.left="-50%",l.style.left="-25%",t.style.right=0,o.style.right="-25%",r.forEach(e=>e.style.display="none"),t.addEventListener("transitionend",(function(){t.querySelector(".slide-2").classList.add("slide-2__scrolled"),t.querySelector(".section-name").classList.add("section-name__scrolled")})),t.addEventListener("animationend",(function(){a.style.display="none",r.forEach(e=>e.style.display="block")}));break;case"media":s.style.left="-75%",l.style.left="-50%",n.style.right="100%",t.addEventListener("transitionend",(function(){t.querySelector(".slide-1").classList.add("slide-1__scrolled"),t.querySelector(".slide-2").classList.add("slide-2__scrolled")})),t.querySelector(".slide-2").addEventListener("animationend",(function(){}))}sessionStorage.setItem("order",t.dataset.order)},expandPrimarySectionOnDesktop:t=>{const i=e.$el(".section-slider-desktop"),s=i.querySelector('[data-name="about"]'),l=i.querySelector('[data-name="hobby"]'),o=i.querySelector('[data-name="projects"]'),r=i.querySelector('[data-name="media"]');switch(a("#desktopVerticalTextSlider"),n(".hobbydesktop-","auto"),n(".projectsdesktop-","auto"),n(".mediadesktop-","auto"),t.style.width="95%",sessionStorage.setItem("order",t.dataset.order),t.dataset.name){case"about":t.querySelector(".section-desktop__content").style.right="calc(100% - 413px)",s.style.left="2.5%",l.style.left="97.5%",o.style.right="-25%",r.style.right="-90%";break;case"hobby":t.querySelector(".section-desktop__content").style.left="0px",s.style.left="-30%",l.style.left="2.5%",o.style.right="-10%",r.style.right="-40%";break;case"projects":t.querySelector(".section-name").style.left="0",s.style.left="-50%",l.style.left="-20%",o.style.right="2.5%",r.style.right="-30%";break;case"media":s.style.left="-60%",l.style.left="-30%",o.style.right="97.5%",r.style.right="2.5%"}e.initStateLinks()},changePage:t=>{t.preventDefault(),e.$el("main").classList.add("page-changing"),e.clearState(),setTimeout(()=>window.location.href=t.target.href,700)},checkIsActiveLink:e=>{e.classList.add("active"),e.previousElementSibling.classList.add("active-divider")}},t=document.getElementById("animationsPolygon"),i=document.getElementById("hamburgerSection"),s=e.$el(".primary"),l=e.$el(".news"),n=(e,t=2,i=15)=>new Swiper(e,{direction:"vertical",loop:!0,slidesPerView:t,spaceBetween:Number(i),scrollbar:{verticalClass:"d-none"},on:{afterInit:function(){let e=500;this.slides.forEach((t,i)=>{setTimeout(()=>{t.style.opacity="1"},e),e+=200})},slideChange:function(){const{activeIndex:e}=this;sessionStorage.setItem("order",this.slides[e].dataset.swiperSlideIndex)}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:e.slice(0,e.indexOf("-"))+"-next",prevEl:e.slice(0,e.indexOf("-"))+"-prev",lockClass:"d-none"}}),o=e=>{new Swiper(".primary-swiper-desktop",{slidesPerView:"auto",spaceBetween:0,loop:!0,loopedSlides:4,centeredSlides:!0,initialSlide:Number(e),keyboard:{enabled:!0,onlyInViewport:!0},on:{slideChange:function(){const{activeIndex:e}=this;sessionStorage.setItem("order",this.slides[e].dataset.swiperSlideIndex),this.slides.forEach((t,i)=>{i===e?t.querySelector(".active-content").classList.remove("active-content__inactive"):t.querySelector(".active-content").classList.add("active-content__inactive")})}}})},a=e=>new Swiper(e,{direction:"vertical",slidesPerView:"auto",freeMode:!0,scrollbar:{el:".swiper-scrollbar"},navigation:{nextEl:".vertical-text-next",prevEl:".vertical-text-prev ",lockClass:"d-none"},mousewheel:!0});let r=!1;const d=setInterval(()=>{i.querySelector(".active")&&e.$el(".hamburger__section__finally_opened")&&(e.checkIsActiveLink(e.$el(".active")),r=!0),r&&clearInterval(d)},100);t.insertAdjacentElement("afterbegin",i.cloneNode(!0)),t.querySelector("#hamburgerSection").id="";const c=t.querySelectorAll("a");if(c.forEach((e,t)=>{t!==c.length-1&&(e.style.width="auto",e.style.visibility="visible")}),e.$el(".desktop-links").querySelectorAll("a").forEach(t=>t.addEventListener("click",(function(t){e.changePage(t)}))),i.addEventListener("click",(function(t){i.classList.add("hamburger__section__opened"),i.addEventListener("animationend",()=>{i.classList.add("hamburger__section__finally_opened"),i.querySelectorAll("a").forEach((t,i)=>{i!==c.length-1&&(t.style.width=c[i].offsetWidth+"px",t.addEventListener("click",(function(t){e.changePage(t)})))})})})),s)if(e.isState())e.isDesktop()?(o(sessionStorage.getItem("order")),a("#desktopVerticalTextSlider"),n(".hobbydesktop-","auto"),n(".projectsdesktop-","auto"),n(".mediadesktop-","auto"),e.$el("main").style.opacity="1"):(new Swiper("#innerPrimarySlider",{slidesPerView:"auto",centeredSlides:!1,spaceBetween:0,loop:!0,loopedSlides:4,centeredSlides:!1,keyboard:{enabled:!0,onlyInViewport:!0},initialSlide:Number(sessionStorage.getItem("order"))}),a("#mobileVerticalTextSlider"),n(".projects-slider"),n(".hobby-slider"),n(".podcast-slider"),e.$el("main").style.transition="all .25s",setTimeout(()=>e.$el("main").style.opacity="1",1400)),e.initStateLinks(),e.clearState();else{e.$el("main").style.opacity="1";document.getElementById("primarySlider");const t=document.querySelectorAll(".section"),i=e.$el(".section-slider-desktop").querySelectorAll(".section-desktop"),s=document.getElementById("primarySwiperDesktop"),l=e.$el(".inner-section-slider");t.forEach(t=>{t.addEventListener("click",(function(){const i=t.querySelector(".slide-1").nextElementSibling;i.querySelector(".inner-section-slider")||(i.insertAdjacentElement("afterbegin",l.cloneNode(!0)),l.innerHTML=""),e.expandPrimarySection(t),setTimeout(()=>{new Swiper("#innerPrimarySlider",{slidesPerView:"auto",centeredSlides:!1,spaceBetween:0,loop:!0,loopedSlides:4,centeredSlides:!1,keyboard:{enabled:!0,onlyInViewport:!0},initialSlide:Number(t.dataset.inner)})},400),setTimeout(()=>{a("#mobileVerticalTextSlider")},950),setTimeout(()=>{n(".hobby-slider")},1450),setTimeout(()=>{n(".projects-slider"),n(".podcast-slider")},1700)}))}),i.forEach(t=>{t.addEventListener("click",(function(){o(t.dataset.order),e.expandPrimarySectionOnDesktop(t),t.addEventListener("transitionend",()=>{s.style.top="0",setTimeout(()=>{s.classList.add("showed")},350)})}))})}if(e.$el(".black-slider")&&new Swiper(".black-slider",{direction:"vertical",loop:!0,slidesPerView:2,spaceBetween:24,scrollbar:{verticalClass:"d-none"},on:{afterInit:function(){let e=600;this.slides.forEach((t,i)=>{setTimeout(()=>{t.style.opacity="1"},e),e+=200})}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:".black-slider-next",prevEl:".black-slider-prev",lockClass:"d-none"},breakpoints:{996:{slidesPerView:2}}}),l){r&&clearInterval(d);let e=200;l.querySelectorAll(".news-item").forEach(t=>{setTimeout(()=>t.style.opacity=1,e),e+=200}),new Swiper(".horizontal-desktop-slider",{direction:"vertical",slidesPerView:"auto",spaceBetween:10,loop:!1,breakpoints:{996:{slidesPerView:3,direction:"horizontal",spaceBetween:36}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev",lockClass:"d-none"}})}e.$el(".single-page")&&new Swiper(".singlepagedesktop-",{direction:"vertical",loop:!0,slidesPerView:"auto",spaceBetween:15,scrollbar:{verticalClass:"d-none"},on:{afterInit:function(){let e=500;this.slides.forEach((t,i)=>{setTimeout(()=>{t.style.opacity="1"},e),e+=200})}},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:!0,navigation:{nextEl:".singlepagedesktop-next",prevEl:".singlepagedesktop-prev",lockClass:"d-none"}})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInV0aWxzIiwiJGVsIiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yIiwic2V0U3RhdGUiLCJzZXNzaW9uU3RvcmFnZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJpbm5lckhUTUwiLCJjbGVhclN0YXRlIiwicmVtb3ZlSXRlbSIsImluaXRTdGF0ZUxpbmtzIiwic2V0VGltZW91dCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsaW5rIiwiaXNTdGF0ZSIsImdldEl0ZW0iLCJpc0Rlc2t0b3AiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiZXhwYW5kUHJpbWFyeVNlY3Rpb24iLCJzZWN0aW9uIiwicHJpbWFyeVdyYXBwZXIiLCJhYm91dCIsImhvYmJ5IiwicHJvamVjdHMiLCJtZWRpYSIsImlubmVyTmFtZSIsImRhdGFzZXQiLCJuYW1lIiwic3R5bGUiLCJ3aWR0aCIsImxlZnQiLCJyaWdodCIsImNsYXNzTGlzdCIsImFkZCIsImZvckVhY2giLCJkaXNwbGF5IiwibG9nIiwib3V0ZXJOYW1lIiwib3JkZXIiLCJleHBhbmRQcmltYXJ5U2VjdGlvbk9uRGVza3RvcCIsImRlc2t0b3BQcmltYXJ5V3JhcHBlciIsImluaXRWZXJ0aWNhbFNsaWRlciIsImluaXRWZXJ0aWNhbFRleHRTbGlkZXIiLCJlIiwibG9jYXRpb24iLCJocmVmIiwidGFyZ2V0IiwiY2hlY2tJc0FjdGl2ZUxpbmsiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwiZ2V0RWxlbWVudEJ5SWQiLCJwcmltYXJ5Iiwic3BhY2VCZXR3ZWVuIiwiU3dpcGVyIiwiYW5pbWF0aW9uc1BvbHlnb24iLCJoYW1idXJnZXJNZW51Iiwic2xpZGVzUGVyVmlldyIsIk51bWJlciIsInNjcm9sbGJhciIsIm9uIiwiYWZ0ZXJJbml0IiwiZGVsYXkiLCJ0aGlzIiwic2xpZGUiLCJuIiwib3BhY2l0eSIsInNsaWRlcyIsImFjdGl2ZUluZGV4Iiwic3dpcGVyU2xpZGVJbmRleCIsImtleWJvYXJkIiwic2xpZGVDaGFuZ2UiLCJvbmx5SW5WaWV3cG9ydCIsIm1vdXNld2hlZWwiLCJuYXZpZ2F0aW9uIiwibmV4dEVsIiwic2xpY2UiLCJpbmRleE9mIiwicHJldkVsIiwibG9ja0NsYXNzIiwiaW5pdGlhbFNsaWRlUG9zaWl0b24iLCJsb29wIiwibG9vcGVkU2xpZGVzIiwiY2VudGVyZWRTbGlkZXMiLCJpbml0aWFsU2xpZGUiLCJpbml0RGVza3RvcElubmVyU2xpZGVyIiwiZW5hYmxlZCIsInJlbW92ZSIsImRpcmVjdGlvbiIsImZyZWVNb2RlIiwiZWwiLCJzZXRJbnRlcnZhbCIsImlzTWFya2VkIiwiY2xlYXJJbnRlcnZhbCIsIm1lbnVJbnRlcnZhbCIsImNsb25lTm9kZSIsImlkIiwiaGVhZGVyTGlua3NDb3B5IiwiYSIsImkiLCJ2aXNpYmlsaXR5IiwiY2hhbmdlUGFnZSIsImxlbmd0aCIsIm9mZnNldFdpZHRoIiwidHJhbnNpdGlvbiIsInByaW1hcnlTZWN0aW9ucyIsInByaW1hcnlTbGlkZXJTZWN0aW9uIiwiJGlubmVyU2xpZGVyRWwiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJ3cmFwcGVyIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiaW5uZXIiLCJkZXNrdG9wUHJpbWFyeVNlY3Rpb25zIiwidG9wIiwiZGVza3RvcFByaW1hcnlJbm5lclNsaWRlciIsInZlcnRpY2FsQ2xhc3MiLCJicmVha3BvaW50cyIsIm5ld3MiLCJpdGVtIiwiOTk2Il0sIm1hcHBpbmdzIjoiQUFBQUEsU0FBU0MsaUJBQWlCLG9CQUFvQixXQUMxQyxNQUFNQyxFQUFRLENBQ1BDLElBQUdDLEdBQWFKLFNBQVNLLGNBQWNELEdBQzFDRSxTQUFVLEtBQ05DLGVBQWVDLFFBQVEsUUFBY0MsS0FBQUEsVUFBZ0JOLEVBQUlBLElBQUEsZUFBZU8sYUFFNUVDLFdBQVksS0FDUkosZUFBZUssV0FBVyxVQUU5QkMsZUFBZ0IsS0FFWkMsV0FBaUIsS0FDY2QsU0FBQ2UsaUJBQWlC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QUVwQkMsWUF4QjhCLEVBMEI5QkMsV0FBWSxDQUNDQyxPQUFBLDBCQUNBRyxPQUFBLDBCQUNUQyxVQUFXIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnN0IHV0aWxzID0ge1xyXG4gICAgICAgICRlbDogKHNlbGVjdG9yKSA9PiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSxcclxuICAgICAgICBzZXRTdGF0ZTogKCkgPT4ge1xyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdzdGF0ZScsIEpTT04uc3RyaW5naWZ5KHV0aWxzLiRlbCgnLmluZGV4LW1haW4nKS5pbm5lckhUTUwpKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2xlYXJTdGF0ZTogKCkgPT4ge1xyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCdzdGF0ZScpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBpbml0U3RhdGVMaW5rczogKCkgPT4ge1xyXG4gICAgICAgICAgICAvLyDQodGB0YvQu9C60LgsINC/0YDQuCDQutC70LjQutC1INC90LAg0LrQvtGC0L7RgNGL0YUg0YHQvtGF0YDQsNC90Y/QtdGC0YHRjyDRgdC+0YHRgtC+0Y/QvdC40LUg0YTRgNC+0L3RgtCwINC90LAg0LPQu9Cw0LLQvdC+0Lkg0YHRgtGA0LDQvdC40YbQtVxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRlTGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3RhdGUtbGluaycpXHJcbiAgICAgICAgICAgICAgICBzdGF0ZUxpbmtzLmZvckVhY2gobGluayA9PiBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLnNldFN0YXRlKClcclxuICAgICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICB9LCAxMDAwKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaXNTdGF0ZTogKCkgPT4gISFzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdzdGF0ZScpLFxyXG4gICAgICAgIGlzRGVza3RvcDogKCkgPT4gd2luZG93LmlubmVyV2lkdGggPj0gOTk2LFxyXG4gICAgICAgIGV4cGFuZFByaW1hcnlTZWN0aW9uOiAoc2VjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBwcmltYXJ5V3JhcHBlciA9IHV0aWxzLiRlbCgnLnNlY3Rpb24tc2xpZGVyJylcclxuICAgICAgICAgICAgY29uc3QgYWJvdXQgPSBwcmltYXJ5V3JhcHBlci5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uYW1lPVwiYWJvdXRcIl0nKVxyXG4gICAgICAgICAgICBjb25zdCBob2JieSA9IHByaW1hcnlXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5hbWU9XCJob2JieVwiXScpXHJcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3RzID0gcHJpbWFyeVdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtbmFtZT1cInByb2plY3RzXCJdJylcclxuICAgICAgICAgICAgY29uc3QgbWVkaWEgPSBwcmltYXJ5V3JhcHBlci5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uYW1lPVwibWVkaWFcIl0nKVxyXG5cclxuICAgICAgICAgICAgY29uc3Qgb3V0ZXJOYW1lID0gc2VjdGlvbi5xdWVyeVNlbGVjdG9yKGBbZGF0YS1wb3NpdGlvbi0ke3NlY3Rpb24uZGF0YXNldC5uYW1lfT1cIm91dGVyXCJdYClcclxuICAgICAgICAgICAgY29uc3QgaW5uZXJOYW1lID0gc2VjdGlvbi5xdWVyeVNlbGVjdG9yQWxsKGBbZGF0YS1wb3NpdGlvbi0ke3NlY3Rpb24uZGF0YXNldC5uYW1lfT1cImlubmVyXCJdYClcclxuICAgICAgICAgICAgY29uc29sZS5sb2coaW5uZXJOYW1lKVxyXG4gICAgICAgICAgICB1dGlscy5pbml0U3RhdGVMaW5rcygpXHJcbiAgICAgICAgICAgIHNlY3Rpb24uc3R5bGUud2lkdGggPSAnMTAwJSdcclxuICAgICAgICAgICAgc3dpdGNoIChzZWN0aW9uLmRhdGFzZXQubmFtZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnYWJvdXQnOlxyXG4gICAgICAgICAgICAgICAgICAgIGhvYmJ5LnN0eWxlLmxlZnQgPSAnMTAwJSdcclxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0cy5zdHlsZS5yaWdodCA9ICctNTAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIG1lZGlhLnN0eWxlLnJpZ2h0ID0gJy03MCUnXHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZS0xJykuY2xhc3NMaXN0LmFkZCgnc2xpZGUtMV9fc2Nyb2xsZWQnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZS0zJykuY2xhc3NMaXN0LmFkZCgnc2xpZGUtM19fc2Nyb2xsZWQnKVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdob2JieSc6XHJcbiAgICAgICAgICAgICAgICAgICAgYWJvdXQuc3R5bGUubGVmdCA9ICctMjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uc3R5bGUubGVmdCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdHMuc3R5bGUucmlnaHQgPSAnLTI1JSdcclxuICAgICAgICAgICAgICAgICAgICBtZWRpYS5zdHlsZS5yaWdodCA9ICctNTAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGlubmVyTmFtZS5mb3JFYWNoKG5hbWUgPT4gbmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnKVxyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2xpZGUtMScpLmNsYXNzTGlzdC5hZGQoJ3NsaWRlLTFfX3Njcm9sbGVkJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi1uYW1lJykuY2xhc3NMaXN0LmFkZCgnc2VjdGlvbi1uYW1lX19zY3JvbGxlZCcpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTInKS5jbGFzc0xpc3QuYWRkKCdzbGlkZS0yX19zY3JvbGxlZCcpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0ZXJOYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5uZXJOYW1lLmZvckVhY2gobmFtZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhuYW1lKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdwcm9qZWN0cyc6XHJcbiAgICAgICAgICAgICAgICAgICAgYWJvdXQuc3R5bGUubGVmdCA9ICctNTAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGhvYmJ5LnN0eWxlLmxlZnQgPSAnLTI1JSc7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5zdHlsZS5yaWdodCA9IDBcclxuICAgICAgICAgICAgICAgICAgICBtZWRpYS5zdHlsZS5yaWdodCA9ICctMjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGlubmVyTmFtZS5mb3JFYWNoKG5hbWUgPT4gbmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnKVxyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2xpZGUtMicpLmNsYXNzTGlzdC5hZGQoJ3NsaWRlLTJfX3Njcm9sbGVkJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi1uYW1lJykuY2xhc3NMaXN0LmFkZCgnc2VjdGlvbi1uYW1lX19zY3JvbGxlZCcpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0ZXJOYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5uZXJOYW1lLmZvckVhY2gobmFtZSA9PiBuYW1lLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snKVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdtZWRpYSc6XHJcbiAgICAgICAgICAgICAgICAgICAgYWJvdXQuc3R5bGUubGVmdCA9ICctNzUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGhvYmJ5LnN0eWxlLmxlZnQgPSAnLTUwJSc7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdHMuc3R5bGUucmlnaHQgPSAnMTAwJSdcclxuICAgICAgICAgICAgICAgICAgICAvLyBtZWRpYS5zdHlsZS5yaWdodCA9ICctMTAwJSdcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTEnKS5jbGFzc0xpc3QuYWRkKCdzbGlkZS0xX19zY3JvbGxlZCcpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTInKS5jbGFzc0xpc3QuYWRkKCdzbGlkZS0yX19zY3JvbGxlZCcpXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZS0yJykuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgZnVuY3Rpb24gKCkge30pXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnb3JkZXInLCBzZWN0aW9uLmRhdGFzZXQub3JkZXIpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBleHBhbmRQcmltYXJ5U2VjdGlvbk9uRGVza3RvcDogKHNlY3Rpb24pID0+IHtcclxuICAgICAgICAgICAgY29uc3QgZGVza3RvcFByaW1hcnlXcmFwcGVyID0gdXRpbHMuJGVsKCcuc2VjdGlvbi1zbGlkZXItZGVza3RvcCcpXHJcbiAgICAgICAgICAgIGNvbnN0IGFib3V0ID0gZGVza3RvcFByaW1hcnlXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5hbWU9XCJhYm91dFwiXScpXHJcbiAgICAgICAgICAgIGNvbnN0IGhvYmJ5ID0gZGVza3RvcFByaW1hcnlXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5hbWU9XCJob2JieVwiXScpXHJcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3RzID0gZGVza3RvcFByaW1hcnlXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5hbWU9XCJwcm9qZWN0c1wiXScpXHJcbiAgICAgICAgICAgIGNvbnN0IG1lZGlhID0gZGVza3RvcFByaW1hcnlXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5hbWU9XCJtZWRpYVwiXScpXHJcbiAgICAgICAgICAgIGluaXRWZXJ0aWNhbFRleHRTbGlkZXIoJyNkZXNrdG9wVmVydGljYWxUZXh0U2xpZGVyJylcclxuICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcuaG9iYnlkZXNrdG9wLScsICdhdXRvJylcclxuICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcucHJvamVjdHNkZXNrdG9wLScsICdhdXRvJylcclxuICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcubWVkaWFkZXNrdG9wLScsICdhdXRvJylcclxuICAgICAgICAgICAgc2VjdGlvbi5zdHlsZS53aWR0aCA9ICc5NSUnXHJcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ29yZGVyJywgc2VjdGlvbi5kYXRhc2V0Lm9yZGVyKVxyXG4gICAgICAgICAgICBzd2l0Y2ggKHNlY3Rpb24uZGF0YXNldC5uYW1lKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdhYm91dCc6XHJcbiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi1kZXNrdG9wX19jb250ZW50Jykuc3R5bGUucmlnaHQgPSAnY2FsYygxMDAlIC0gNDEzcHgpJ1xyXG4gICAgICAgICAgICAgICAgICAgIGFib3V0LnN0eWxlLmxlZnQgPSAnMi41JSdcclxuICAgICAgICAgICAgICAgICAgICBob2JieS5zdHlsZS5sZWZ0ID0gJzk3LjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2plY3RzLnN0eWxlLnJpZ2h0ID0gJy0yNSUnXHJcbiAgICAgICAgICAgICAgICAgICAgbWVkaWEuc3R5bGUucmlnaHQgPSAnLTkwJSdcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2hvYmJ5JzpcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRlc2t0b3BfX2NvbnRlbnQnKS5zdHlsZS5sZWZ0ID0gJzBweCdcclxuICAgICAgICAgICAgICAgICAgICBhYm91dC5zdHlsZS5sZWZ0ID0gJy0zMCUnXHJcbiAgICAgICAgICAgICAgICAgICAgaG9iYnkuc3R5bGUubGVmdCA9ICcyLjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2plY3RzLnN0eWxlLnJpZ2h0ID0gJy0xMCUnXHJcbiAgICAgICAgICAgICAgICAgICAgbWVkaWEuc3R5bGUucmlnaHQgPSAnLTQwJSdcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ3Byb2plY3RzJzpcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLW5hbWUnKS5zdHlsZS5sZWZ0ID0gJzAnXHJcbiAgICAgICAgICAgICAgICAgICAgYWJvdXQuc3R5bGUubGVmdCA9ICctNTAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGhvYmJ5LnN0eWxlLmxlZnQgPSAnLTIwJSdcclxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0cy5zdHlsZS5yaWdodCA9ICcyLjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIG1lZGlhLnN0eWxlLnJpZ2h0ID0gJy0zMCUnXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdtZWRpYSc6XHJcbiAgICAgICAgICAgICAgICAgICAgYWJvdXQuc3R5bGUubGVmdCA9ICctNjAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGhvYmJ5LnN0eWxlLmxlZnQgPSAnLTMwJSdcclxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0cy5zdHlsZS5yaWdodCA9ICc5Ny41JSdcclxuICAgICAgICAgICAgICAgICAgICBtZWRpYS5zdHlsZS5yaWdodCA9ICcyLjUlJ1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHV0aWxzLmluaXRTdGF0ZUxpbmtzKClcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNoYW5nZVBhZ2U6IChlKSA9PiB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgICAgICB1dGlscy4kZWwoJ21haW4nKS5jbGFzc0xpc3QuYWRkKCdwYWdlLWNoYW5naW5nJylcclxuICAgICAgICAgICAgdXRpbHMuY2xlYXJTdGF0ZSgpXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gd2luZG93LmxvY2F0aW9uLmhyZWYgPSBlLnRhcmdldC5ocmVmLCA3MDApXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjaGVja0lzQWN0aXZlTGluazogKGxpbmspID0+IHtcclxuICAgICAgICAgICAgbGluay5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICBsaW5rLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnYWN0aXZlLWRpdmlkZXInKVxyXG4gICAgICAgIH0sXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgYW5pbWF0aW9uc1BvbHlnb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYW5pbWF0aW9uc1BvbHlnb24nKVxyXG4gICAgY29uc3QgaGFtYnVyZ2VyTWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoYW1idXJnZXJTZWN0aW9uJylcclxuICAgIGNvbnN0IHByaW1hcnkgPSB1dGlscy4kZWwoJy5wcmltYXJ5JylcclxuICAgIGNvbnN0IG5ld3MgPSB1dGlscy4kZWwoJy5uZXdzJylcclxuXHJcbiAgICBjb25zdCBpbml0VmVydGljYWxTbGlkZXIgPSAoJGVsLCBzbGlkZXNQZXJWaWV3ID0gMiwgc3BhY2VCZXR3ZWVuID0gMTUpID0+IHtcclxuICAgICAgICByZXR1cm4gbmV3IFN3aXBlcigkZWwsIHtcclxuICAgICAgICAgICAgLy8gT3B0aW9uYWwgcGFyYW1ldGVyc1xyXG4gICAgICAgICAgICBkaXJlY3Rpb246ICd2ZXJ0aWNhbCcsXHJcbiAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IHNsaWRlc1BlclZpZXcsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogTnVtYmVyKHNwYWNlQmV0d2VlbiksXHJcbiAgICAgICAgICAgIHNjcm9sbGJhcjoge1xyXG4gICAgICAgICAgICAgICAgdmVydGljYWxDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb246IHtcclxuICAgICAgICAgICAgICAgIGFmdGVySW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkZWxheSA9IDUwMFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2xpZGVzLmZvckVhY2goKHNsaWRlLCBuKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBkZWxheSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXkgKz0gMjAwXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBzbGlkZUNoYW5nZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlSW5kZXhcclxuICAgICAgICAgICAgICAgICAgICB9ID0gdGhpc1xyXG4gICAgICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ29yZGVyJywgdGhpcy5zbGlkZXNbYWN0aXZlSW5kZXhdLmRhdGFzZXQuc3dpcGVyU2xpZGVJbmRleClcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAga2V5Ym9hcmQ6IHtcclxuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBvbmx5SW5WaWV3cG9ydDogdHJ1ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbW91c2V3aGVlbDogdHJ1ZSxcclxuICAgICAgICAgICAgLy8gTmF2aWdhdGlvbiBhcnJvd3NcclxuICAgICAgICAgICAgbmF2aWdhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgbmV4dEVsOiBgJHskZWwuc2xpY2UoMCwgJGVsLmluZGV4T2YoJy0nKSl9LW5leHRgLFxyXG4gICAgICAgICAgICAgICAgcHJldkVsOiBgJHskZWwuc2xpY2UoMCwgJGVsLmluZGV4T2YoJy0nKSl9LXByZXZgLFxyXG4gICAgICAgICAgICAgICAgbG9ja0NsYXNzOiAnZC1ub25lJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGluaXREZXNrdG9wSW5uZXJTbGlkZXIgPSAoaW5pdGlhbFNsaWRlUG9zaWl0b24pID0+IHtcclxuICAgICAgICBuZXcgU3dpcGVyKCcucHJpbWFyeS1zd2lwZXItZGVza3RvcCcsIHtcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMCxcclxuICAgICAgICAgICAgbG9vcDogdHJ1ZSxcclxuICAgICAgICAgICAgbG9vcGVkU2xpZGVzOiA0LFxyXG4gICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgICAgICAgaW5pdGlhbFNsaWRlOiBOdW1iZXIoaW5pdGlhbFNsaWRlUG9zaWl0b24pLFxyXG4gICAgICAgICAgICBrZXlib2FyZDoge1xyXG4gICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIG9ubHlJblZpZXdwb3J0OiB0cnVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBvbjoge1xyXG4gICAgICAgICAgICAgICAgc2xpZGVDaGFuZ2U6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZUluZGV4XHJcbiAgICAgICAgICAgICAgICAgICAgfSA9IHRoaXNcclxuICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdvcmRlcicsIHRoaXMuc2xpZGVzW2FjdGl2ZUluZGV4XS5kYXRhc2V0LnN3aXBlclNsaWRlSW5kZXgpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zbGlkZXMuZm9yRWFjaCgoc2xpZGUsIG4pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG4gPT09IGFjdGl2ZUluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZS5xdWVyeVNlbGVjdG9yKCcuYWN0aXZlLWNvbnRlbnQnKS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUtY29udGVudF9faW5hY3RpdmUnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2xpZGUucXVlcnlTZWxlY3RvcignLmluYWN0aXZlLWNvbnRlbnQnKS5zdHlsZS5vcGFjaXR5ID0gJzAnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZS5xdWVyeVNlbGVjdG9yKCcuYWN0aXZlLWNvbnRlbnQnKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUtY29udGVudF9faW5hY3RpdmUnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBpbml0VmVydGljYWxUZXh0U2xpZGVyID0gKCRlbCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgU3dpcGVyKCRlbCwge1xyXG4gICAgICAgICAgICBkaXJlY3Rpb246IFwidmVydGljYWxcIixcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgIGZyZWVNb2RlOiB0cnVlLFxyXG4gICAgICAgICAgICBzY3JvbGxiYXI6IHtcclxuICAgICAgICAgICAgICAgIGVsOiBcIi5zd2lwZXItc2Nyb2xsYmFyXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogYC52ZXJ0aWNhbC10ZXh0LW5leHRgLFxyXG4gICAgICAgICAgICAgICAgcHJldkVsOiBgLnZlcnRpY2FsLXRleHQtcHJldiBgLFxyXG4gICAgICAgICAgICAgICAgbG9ja0NsYXNzOiAnZC1ub25lJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBtb3VzZXdoZWVsOiB0cnVlLFxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGlzTWFya2VkID0gZmFsc2U7XHJcbiAgICBjb25zdCBtZW51SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKGhhbWJ1cmdlck1lbnUucXVlcnlTZWxlY3RvcignLmFjdGl2ZScpICYmIHV0aWxzLiRlbCgnLmhhbWJ1cmdlcl9fc2VjdGlvbl9fZmluYWxseV9vcGVuZWQnKSkge1xyXG4gICAgICAgICAgICB1dGlscy5jaGVja0lzQWN0aXZlTGluayh1dGlscy4kZWwoJy5hY3RpdmUnKSlcclxuICAgICAgICAgICAgaXNNYXJrZWQgPSB0cnVlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlzTWFya2VkICYmIGNsZWFySW50ZXJ2YWwobWVudUludGVydmFsKVxyXG4gICAgfSwgMTAwKVxyXG5cclxuICAgIC8vINCa0LvQvtC90LjRgNGD0LXQvCDRiNCw0L/QutGDLCDRh9GC0L7QsdGLINCy0YvRh9C40YHQu9C40YLRjCDQtNC70LjQvdGDINC/0YPQvdC60YLQvtCyINC80LXQvdGOINC00LvRjyDQuNGFINC/0LvQsNCy0L3QvtC5INCw0L3QuNC80LDRhtC40LhcclxuICAgIGFuaW1hdGlvbnNQb2x5Z29uLmluc2VydEFkamFjZW50RWxlbWVudCgnYWZ0ZXJiZWdpbicsIGhhbWJ1cmdlck1lbnUuY2xvbmVOb2RlKHRydWUpKVxyXG4gICAgYW5pbWF0aW9uc1BvbHlnb24ucXVlcnlTZWxlY3RvcignI2hhbWJ1cmdlclNlY3Rpb24nKS5pZCA9ICcnXHJcbiAgICBjb25zdCBoZWFkZXJMaW5rc0NvcHkgPSBhbmltYXRpb25zUG9seWdvbi5xdWVyeVNlbGVjdG9yQWxsKCdhJylcclxuICAgIGhlYWRlckxpbmtzQ29weS5mb3JFYWNoKChhLCBpKSA9PiB7XHJcbiAgICAgICAgaWYgKGkgIT09IGhlYWRlckxpbmtzQ29weS5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgICAgIGEuc3R5bGUud2lkdGggPSAnYXV0bydcclxuICAgICAgICAgICAgYS5zdHlsZS52aXNpYmlsaXR5ID0gJ3Zpc2libGUnXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICB1dGlscy4kZWwoJy5kZXNrdG9wLWxpbmtzJykucXVlcnlTZWxlY3RvckFsbCgnYScpLmZvckVhY2goYSA9PiBhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICB1dGlscy5jaGFuZ2VQYWdlKGUpXHJcbiAgICB9KSlcclxuXHJcbiAgICBoYW1idXJnZXJNZW51LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBoYW1idXJnZXJNZW51LmNsYXNzTGlzdC5hZGQoJ2hhbWJ1cmdlcl9fc2VjdGlvbl9fb3BlbmVkJylcclxuICAgICAgICBoYW1idXJnZXJNZW51LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsICgpID0+IHtcclxuICAgICAgICAgICAgaGFtYnVyZ2VyTWVudS5jbGFzc0xpc3QuYWRkKCdoYW1idXJnZXJfX3NlY3Rpb25fX2ZpbmFsbHlfb3BlbmVkJylcclxuICAgICAgICAgICAgaGFtYnVyZ2VyTWVudS5xdWVyeVNlbGVjdG9yQWxsKCdhJykuZm9yRWFjaCgoYSwgaSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGkgIT09IGhlYWRlckxpbmtzQ29weS5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYS5zdHlsZS53aWR0aCA9IGhlYWRlckxpbmtzQ29weVtpXS5vZmZzZXRXaWR0aCArICdweCdcclxuICAgICAgICAgICAgICAgICAgICBhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuY2hhbmdlUGFnZShlKVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcblxyXG4gICAgLy8g0JXRgdC70Lgg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINC90LAg0LPQu9Cw0LLQvdC+0LlcclxuICAgIGlmIChwcmltYXJ5KSB7XHJcblxyXG5cclxuICAgICAgICBpZiAodXRpbHMuaXNTdGF0ZSgpKSB7XHJcbiAgICAgICAgICAgIGlmICh1dGlscy5pc0Rlc2t0b3AoKSkge1xyXG4gICAgICAgICAgICAgICAgaW5pdERlc2t0b3BJbm5lclNsaWRlcihzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdvcmRlcicpKVxyXG4gICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsVGV4dFNsaWRlcignI2Rlc2t0b3BWZXJ0aWNhbFRleHRTbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcuaG9iYnlkZXNrdG9wLScsICdhdXRvJylcclxuICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFNsaWRlcignLnByb2plY3RzZGVza3RvcC0nLCAnYXV0bycpXHJcbiAgICAgICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5tZWRpYWRlc2t0b3AtJywgJ2F1dG8nKVxyXG4gICAgICAgICAgICAgICAgdXRpbHMuJGVsKCdtYWluJykuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbmV3IFN3aXBlcignI2lubmVyUHJpbWFyeVNsaWRlcicsIHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiBcImF1dG9cIixcclxuICAgICAgICAgICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9vcGVkU2xpZGVzOiA0LFxyXG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBrZXlib2FyZDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbmx5SW5WaWV3cG9ydDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxTbGlkZTogTnVtYmVyKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ29yZGVyJykpLFxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFRleHRTbGlkZXIoJyNtb2JpbGVWZXJ0aWNhbFRleHRTbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcucHJvamVjdHMtc2xpZGVyJylcclxuICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFNsaWRlcignLmhvYmJ5LXNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICBpbml0VmVydGljYWxTbGlkZXIoJy5wb2RjYXN0LXNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICB1dGlscy4kZWwoJ21haW4nKS5zdHlsZS50cmFuc2l0aW9uID0gJ2FsbCAuMjVzJ1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB1dGlscy4kZWwoJ21haW4nKS5zdHlsZS5vcGFjaXR5ID0gJzEnLCAxNDAwKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHV0aWxzLmluaXRTdGF0ZUxpbmtzKClcclxuICAgICAgICAgICAgdXRpbHMuY2xlYXJTdGF0ZSgpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdXRpbHMuJGVsKCdtYWluJykuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gICAgICAgICAgICBjb25zdCBwcmltYXJ5U2xpZGVyU2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmltYXJ5U2xpZGVyJylcclxuICAgICAgICAgICAgY29uc3QgcHJpbWFyeVNlY3Rpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlY3Rpb24nKVxyXG4gICAgICAgICAgICBjb25zdCBkZXNrdG9wUHJpbWFyeVdyYXBwZXIgPSB1dGlscy4kZWwoJy5zZWN0aW9uLXNsaWRlci1kZXNrdG9wJylcclxuICAgICAgICAgICAgY29uc3QgZGVza3RvcFByaW1hcnlTZWN0aW9ucyA9IGRlc2t0b3BQcmltYXJ5V3JhcHBlci5xdWVyeVNlbGVjdG9yQWxsKCcuc2VjdGlvbi1kZXNrdG9wJylcclxuICAgICAgICAgICAgY29uc3QgZGVza3RvcFByaW1hcnlJbm5lclNsaWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmltYXJ5U3dpcGVyRGVza3RvcCcpXHJcbiAgICAgICAgICAgIGNvbnN0ICRpbm5lclNsaWRlckVsID0gdXRpbHMuJGVsKCcuaW5uZXItc2VjdGlvbi1zbGlkZXInKVxyXG5cclxuICAgICAgICAgICAgLy8g0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC60LvQuNC6INC90LAg0LPQu9Cw0LLQvdC+0Lkg0LIg0LzQvtCx0LjQu9GM0L3QvtC5INCy0LXRgNGB0LjQuFxyXG4gICAgICAgICAgICBwcmltYXJ5U2VjdGlvbnMuZm9yRWFjaChzZWN0aW9uID0+IHtcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgd3JhcHBlciA9IHNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNsaWRlLTEnKS5uZXh0RWxlbWVudFNpYmxpbmdcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXdyYXBwZXIucXVlcnlTZWxlY3RvcignLmlubmVyLXNlY3Rpb24tc2xpZGVyJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5pbnNlcnRBZGphY2VudEVsZW1lbnQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYWZ0ZXJiZWdpbicsICRpbm5lclNsaWRlckVsLmNsb25lTm9kZSh0cnVlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5uZXJTbGlkZXJFbC5pbm5lckhUTUwgPSAnJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB1dGlscy5leHBhbmRQcmltYXJ5U2VjdGlvbihzZWN0aW9uKVxyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgU3dpcGVyKCcjaW5uZXJQcmltYXJ5U2xpZGVyJywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogXCJhdXRvXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFjZUJldHdlZW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9vcGVkU2xpZGVzOiA0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VudGVyZWRTbGlkZXM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5Ym9hcmQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ubHlJblZpZXdwb3J0OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxTbGlkZTogTnVtYmVyKHNlY3Rpb24uZGF0YXNldC5pbm5lciksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgNDAwKVxyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbml0VmVydGljYWxUZXh0U2xpZGVyKCcjbW9iaWxlVmVydGljYWxUZXh0U2xpZGVyJylcclxuICAgICAgICAgICAgICAgICAgICB9LCA5NTApXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluaXRWZXJ0aWNhbFNsaWRlcignLmhvYmJ5LXNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMTQ1MClcclxuICAgICAgICAgICAgICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgaW5pdFZlcnRpY2FsVGV4dFNsaWRlcignI21vYmlsZVZlcnRpY2FsVGV4dFNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGluaXRWZXJ0aWNhbFNsaWRlcignLmhvYmJ5LXNsaWRlcicpXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gfSwgMTcwMClcclxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcucHJvamVjdHMtc2xpZGVyJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5pdFZlcnRpY2FsU2xpZGVyKCcucG9kY2FzdC1zbGlkZXInKVxyXG4gICAgICAgICAgICAgICAgICAgIH0sIDE3MDApXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLy8g0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC60LvQuNC6INC90LAg0LPQu9Cw0LLQvdC+0Lkg0LIg0LTQtdGB0LrRgtC+0L/QvdC+0Lkg0LLQtdGA0YHQuNC4XHJcbiAgICAgICAgICAgIGRlc2t0b3BQcmltYXJ5U2VjdGlvbnMuZm9yRWFjaChzZWN0aW9uID0+IHtcclxuICAgICAgICAgICAgICAgIHNlY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5pdERlc2t0b3BJbm5lclNsaWRlcihzZWN0aW9uLmRhdGFzZXQub3JkZXIpXHJcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZXhwYW5kUHJpbWFyeVNlY3Rpb25PbkRlc2t0b3Aoc2VjdGlvbilcclxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2t0b3BQcmltYXJ5SW5uZXJTbGlkZXIuc3R5bGUudG9wID0gJzAnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVza3RvcFByaW1hcnlJbm5lclNsaWRlci5jbGFzc0xpc3QuYWRkKCdzaG93ZWQnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAzNTApXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh1dGlscy4kZWwoJy5ibGFjay1zbGlkZXInKSkge1xyXG4gICAgICAgIG5ldyBTd2lwZXIoJy5ibGFjay1zbGlkZXInLCB7XHJcbiAgICAgICAgICAgIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcclxuICAgICAgICAgICAgZGlyZWN0aW9uOiAndmVydGljYWwnLFxyXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAyLFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDI0LFxyXG4gICAgICAgICAgICBzY3JvbGxiYXI6IHtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsQ2xhc3M6ICdkLW5vbmUnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9uOiB7XHJcbiAgICAgICAgICAgICAgICBhZnRlckluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZGVsYXkgPSA2MDBcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNsaWRlcy5mb3JFYWNoKChzbGlkZSwgbikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlLnN0eWxlLm9wYWNpdHkgPSAnMSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgZGVsYXkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5ICs9IDIwMFxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGtleWJvYXJkOiB7XHJcbiAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgb25seUluVmlld3BvcnQ6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1vdXNld2hlZWw6IHRydWUsXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogYC5ibGFjay1zbGlkZXItbmV4dGAsXHJcbiAgICAgICAgICAgICAgICBwcmV2RWw6IGAuYmxhY2stc2xpZGVyLXByZXZgLFxyXG4gICAgICAgICAgICAgICAgbG9ja0NsYXNzOiAnZC1ub25lJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBicmVha3BvaW50czoge1xyXG4gICAgICAgICAgICAgICAgOTk2OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMixcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChuZXdzKSB7XHJcbiAgICAgICAgaXNNYXJrZWQgJiYgY2xlYXJJbnRlcnZhbChtZW51SW50ZXJ2YWwpXHJcbiAgICAgICAgbGV0IGRlbGF5ID0gMjAwXHJcbiAgICAgICAgbmV3cy5xdWVyeVNlbGVjdG9yQWxsKCcubmV3cy1pdGVtJykuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiBpdGVtLnN0eWxlLm9wYWNpdHkgPSAxLCBkZWxheSlcclxuICAgICAgICAgICAgZGVsYXkgKz0gMjAwXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgbmV3IFN3aXBlcignLmhvcml6b250YWwtZGVza3RvcC1zbGlkZXInLCB7XHJcbiAgICAgICAgICAgIGRpcmVjdGlvbjogJ3ZlcnRpY2FsJyxcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogJ2F1dG8nLFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDEwLFxyXG4gICAgICAgICAgICBsb29wOiBmYWxzZSxcclxuICAgICAgICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgICAgICAgIDk5Njoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAzNixcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAga2V5Ym9hcmQ6IHtcclxuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBvbmx5SW5WaWV3cG9ydDogdHJ1ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbW91c2V3aGVlbDogdHJ1ZSxcclxuICAgICAgICAgICAgbmF2aWdhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgbmV4dEVsOiBgLnN3aXBlci1idXR0b24tbmV4dGAsXHJcbiAgICAgICAgICAgICAgICBwcmV2RWw6IGAuc3dpcGVyLWJ1dHRvbi1wcmV2YCxcclxuICAgICAgICAgICAgICAgIGxvY2tDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh1dGlscy4kZWwoJy5zaW5nbGUtcGFnZScpKSB7XHJcbiAgICAgICAgLy8gaW5pdFZlcnRpY2FsU2xpZGVyKCcuc2luZ2xlcGFnZWRlc2t0b3AtJywgJ2F1dG8nKVxyXG4gICAgICAgIG5ldyBTd2lwZXIoJy5zaW5nbGVwYWdlZGVza3RvcC0nLCB7XHJcbiAgICAgICAgICAgIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcclxuICAgICAgICAgICAgZGlyZWN0aW9uOiAndmVydGljYWwnLFxyXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAnYXV0bycsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMTUsXHJcbiAgICAgICAgICAgIHNjcm9sbGJhcjoge1xyXG4gICAgICAgICAgICAgICAgdmVydGljYWxDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb246IHtcclxuICAgICAgICAgICAgICAgIGFmdGVySW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkZWxheSA9IDUwMFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2xpZGVzLmZvckVhY2goKHNsaWRlLCBuKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBkZWxheSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXkgKz0gMjAwXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGtleWJvYXJkOiB7XHJcbiAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgb25seUluVmlld3BvcnQ6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1vdXNld2hlZWw6IHRydWUsXHJcbiAgICAgICAgICAgIC8vIE5hdmlnYXRpb24gYXJyb3dzXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogYC5zaW5nbGVwYWdlZGVza3RvcC1uZXh0YCxcclxuICAgICAgICAgICAgICAgIHByZXZFbDogYC5zaW5nbGVwYWdlZGVza3RvcC1wcmV2YCxcclxuICAgICAgICAgICAgICAgIGxvY2tDbGFzczogJ2Qtbm9uZSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSkiXX0=
