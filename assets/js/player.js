document.addEventListener("DOMContentLoaded",(function(){if(document.querySelector("audio")){const e="ontouchstart"in window||window.DocumentTouch&&document instanceof window.DocumentTouch||navigator.maxTouchPoints>0||window.navigator.msMaxTouchPoints>0,t={click:e?"touchstart":"mousedown",move:e?"touchmove":"mousemove",end:e?"touchend":"mouseup"},n=new Audio(document.querySelector("audio").src),o="showed-control",c="hidden-control",r=document.querySelectorAll(".controls-component"),i=(e,t)=>{e.classList.remove(o),e.classList.add(c),t.classList.add(o),t.classList.remove(c)},d=e=>(e-(e%=60))/60+(9<e?":":":0")+e,a=e=>{const t=e.duration.toFixed(0);return e.currentTime.toFixed(0)/(t/100)};setTimeout(()=>{r.forEach((o,c)=>{const r=o.querySelector('[data-action="play"]'),u=o.querySelector('[data-action="stop"]'),s=o.querySelector('[data-action="back"]'),l=o.querySelector('[data-action="forward"]'),m=o.querySelector(".line"),v=o.querySelector(".time"),h=setInterval(()=>{m.style.width=a(n)+"%"},1e3);setInterval(()=>{v.textContent=d((n.duration-n.currentTime).toFixed(0))},1e3);m.addEventListener(t.click,o=>{const c=e?o.changedTouches[0].clientX:o.x,r=m.style.width;clearInterval(h);const i=e=>{m.removeEventListener(t.move,a);const o=m.offsetWidth/(m.parentElement.offsetWidth/100);n.currentTime=o*(n.duration/100),v.textContent=d((n.duration-n.currentTime).toFixed(0))},a=t=>{if(t.target===m||t.target===m.querySelector(".dot")){const n=e?t.changedTouches[0].clientX-c:t.x-c;m.style.width=`calc(${r} + ${n}px)`}else i()};m.addEventListener(t.move,a),m.addEventListener(t.end,i)}),r&&r.addEventListener("click",()=>{i(r,u),n.play()}),u&&u.addEventListener("click",()=>{i(u,r),n.pause()}),s&&s.addEventListener("click",()=>{n.currentTime=n.currentTime<15?0:n.currentTime-15,m.style.width=a(n)+"%",v.textContent=d((n.duration-n.currentTime).toFixed(0))}),l&&l.addEventListener("click",()=>{n.currentTime=n.currentTime<n.duration-15?n.currentTime+15:n.duration,m.style.width=a(n)+"%",v.textContent=d((n.duration-n.currentTime).toFixed(0))}),n.addEventListener("ended",e=>{i(u,r)}),r&&u&&document.addEventListener("keydown",(function(e){"Space"===e.code&&(n.paused?(n.play(),i(r,u)):(n.pause(),i(u,r)))}))})},1e3)}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
